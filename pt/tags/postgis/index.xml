<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Postgis on Alexandre Neto</title><link>http://srnetochan.github.io/pt/tags/postgis/</link><description>Recent content in Postgis on Alexandre Neto</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><lastBuildDate>Fri, 06 Nov 2015 00:49:29 +0000</lastBuildDate><atom:link href="http://srnetochan.github.io/pt/tags/postgis/index.xml" rel="self" type="application/rss+xml"/><item><title>Obter os vértices de multipolígonos usando PostGIS</title><link>http://srnetochan.github.io/pt/posts/tutorials/2015-11-06-obter-os-vertices-de-multipoligonos-em-postgis/</link><pubDate>Fri, 06 Nov 2015 00:49:29 +0000</pubDate><guid>http://srnetochan.github.io/pt/posts/tutorials/2015-11-06-obter-os-vertices-de-multipoligonos-em-postgis/</guid><description>EN | PT
Hoje precisei criar uma view em PostGIS que me devolvesse os vértices de uma camada de multipolígonos. Para além disso, precisava que os mesmos viessem ordenados numericamente começando em 1, e com as respectivas coordenadas XY.
A tarefa parecia-me trivial – bastaria usar a função ST_DumpPoints() para obter os vértices – não fosse o facto dos polígonos em postGIS terem um vértice repetido (obrigatoriamente o último vértice tem de ser igual primeiro) que não me interessava mostrar.</description></item><item><title>Dissolver polígonos em Postgres\Postgis</title><link>http://srnetochan.github.io/pt/posts/tutorials/2013-12-20-dissolver-poligonos-em-postgrespostgis/</link><pubDate>Fri, 20 Dec 2013 15:35:42 +0000</pubDate><guid>http://srnetochan.github.io/pt/posts/tutorials/2013-12-20-dissolver-poligonos-em-postgrespostgis/</guid><description>Trata-se de um cenário muito recorrente em análise espacial. Tendo uma camada\tabela composta por diversos polígonos, queremos &amp;ldquo;juntá-los&amp;rdquo; de acordo com valores distintos de um ou mais atributos (exemplo: de uma camada com os limites de freguesias, queremos obter os concelhos, ou, da COS ao 3º nível, obter o 2º ou o 1º)
Este artigo tem como objectivo mostrar como fazê-lo em Postgres\Postgis.
Tabela de exemplo Como exemplo vou usar uma tabela como o seguinte formato:</description></item><item><title>Triggers para que vos quero...</title><link>http://srnetochan.github.io/pt/posts/tutorials/2013-12-03-triggers-para-que-vos-quero/</link><pubDate>Tue, 03 Dec 2013 23:09:47 +0000</pubDate><guid>http://srnetochan.github.io/pt/posts/tutorials/2013-12-03-triggers-para-que-vos-quero/</guid><description>Há já algum tempo que queria estudar a funcionalidade de triggers em PostgreSQL. A grosso modo, tinha ideia que permitiam executar comandos de forma automática, sempre que se alterasse determinada tabela, mas desconhecia os mecanismos para o fazer. Uma das aplicações que me veio à ideia foi a de usar triggers para manter actualizado atributos geométricos como a área ou o comprimento. Quando editamos de elementos que contêm atributos relacionados com as dimensões, forma ou localização das suas geometrias (área, perímetro, comprimento), é muito fácil esquecermo-nos de os actualizar depois da edição.</description></item></channel></rss>