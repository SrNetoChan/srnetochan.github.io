[{"categories":null,"contents":"Hello World A sample go program is show here.\npackage main import \u0026#34;fmt\u0026#34; func main() { message := greetMe(\u0026#34;world\u0026#34;) fmt.Println(message) } func greetMe(name string) string { return \u0026#34;Hello, \u0026#34; + name + \u0026#34;!\u0026#34; } Run the program as below:\n$ go run hello.go     Variables Normal Declaration:\nvar msg string msg = \u0026#34;Hello\u0026#34; Shortcut:\nmsg := \u0026#34;Hello\u0026#34;     Constants const Phi = 1.618     ","date":"January 1, 0001","hero":"/images/default-hero.jpg","permalink":"https://srnetochan.github.io/notes/go/basic/introduction/","summary":"Hello World A sample go program is show here.\npackage main import \u0026#34;fmt\u0026#34; func main() { message := greetMe(\u0026#34;world\u0026#34;) fmt.Println(message) } func greetMe(name string) string { return \u0026#34;Hello, \u0026#34; + name + \u0026#34;!\u0026#34; } Run the program as below:\n$ go run hello.go     Variables Normal Declaration:\nvar msg string msg = \u0026#34;Hello\u0026#34; Shortcut:\nmsg := \u0026#34;Hello\u0026#34;     Constants const Phi = 1.618     ","tags":null,"title":"Go পরিচিতি"},{"categories":null,"contents":"","date":"January 1, 0001","hero":"/images/default-hero.jpg","permalink":"https://srnetochan.github.io/notes/go/basic/","summary":"","tags":null,"title":"Go বেসিক"},{"categories":null,"contents":"","date":"January 1, 0001","hero":"/images/default-hero.jpg","permalink":"https://srnetochan.github.io/notes/go/advanced/","summary":"","tags":null,"title":"অ্যাডভান্সড"},{"categories":null,"contents":"Strings str := \u0026#34;Hello\u0026#34; Multiline string\nstr := `Multiline string`     Numbers Typical types\nnum := 3 // int num := 3. // float64 num := 3 + 4i // complex128 num := byte(\u0026#39;a\u0026#39;) // byte (alias for uint8) Other Types\nvar u uint = 7 // uint (unsigned) var p float32 = 22.7 // 32-bit float     Arrays // var numbers [5]int numbers := [...]int{0, 0, 0, 0, 0}     Pointers func main () { b := *getPointer() fmt.Println(\u0026#34;Value is\u0026#34;, b) func getPointer () (myPointer *int) { a := 234 return \u0026amp;a a := new(int) *a = 234 Pointers point to a memory location of a variable. Go is fully garbage-collected.\n    Type Conversion i := 2 f := float64(i) u := uint(i)     Slice slice := []int{2, 3, 4} slice := []byte(\u0026#34;Hello\u0026#34;)     ","date":"January 1, 0001","hero":"/images/default-hero.jpg","permalink":"https://srnetochan.github.io/notes/go/basic/types/","summary":"Strings str := \u0026#34;Hello\u0026#34; Multiline string\nstr := `Multiline string`     Numbers Typical types\nnum := 3 // int num := 3. // float64 num := 3 + 4i // complex128 num := byte(\u0026#39;a\u0026#39;) // byte (alias for uint8) Other Types\nvar u uint = 7 // uint (unsigned) var p float32 = 22.7 // 32-bit float     Arrays // var numbers [5]int numbers := [.","tags":null,"title":"বেসিক টাইপ সমূহ"},{"categories":null,"contents":"Condition if day == \u0026#34;sunday\u0026#34; || day == \u0026#34;saturday\u0026#34; { rest() } else if day == \u0026#34;monday\u0026#34; \u0026amp;\u0026amp; isTired() { groan() } else { work() } if _, err := doThing(); err != nil { fmt.Println(\u0026#34;Uh oh\u0026#34;)     Switch switch day { case \u0026#34;sunday\u0026#34;: // cases don\u0026#39;t \u0026#34;fall through\u0026#34; by default!  fallthrough case \u0026#34;saturday\u0026#34;: rest() default: work() }     Loop for count := 0; count \u0026lt;= 10; count++ { fmt.Println(\u0026#34;My counter is at\u0026#34;, count) } entry := []string{\u0026#34;Jack\u0026#34;,\u0026#34;John\u0026#34;,\u0026#34;Jones\u0026#34;} for i, val := range entry { fmt.Printf(\u0026#34;At position %d, the character %s is present\\n\u0026#34;, i, val) n := 0 x := 42 for n != x { n := guess() }     ","date":"January 1, 0001","hero":"/images/default-hero.jpg","permalink":"https://srnetochan.github.io/notes/go/basic/flow-control/","summary":"Condition if day == \u0026#34;sunday\u0026#34; || day == \u0026#34;saturday\u0026#34; { rest() } else if day == \u0026#34;monday\u0026#34; \u0026amp;\u0026amp; isTired() { groan() } else { work() } if _, err := doThing(); err != nil { fmt.Println(\u0026#34;Uh oh\u0026#34;)     Switch switch day { case \u0026#34;sunday\u0026#34;: // cases don\u0026#39;t \u0026#34;fall through\u0026#34; by default!  fallthrough case \u0026#34;saturday\u0026#34;: rest() default: work() }     Loop for count := 0; count \u0026lt;= 10; count++ { fmt.","tags":null,"title":"Flow Control"},{"categories":null,"contents":"Condition if day == \u0026#34;sunday\u0026#34; || day == \u0026#34;saturday\u0026#34; { rest() } else if day == \u0026#34;monday\u0026#34; \u0026amp;\u0026amp; isTired() { groan() } else { work() } if _, err := doThing(); err != nil { fmt.Println(\u0026#34;Uh oh\u0026#34;)     ","date":"January 1, 0001","hero":"/images/default-hero.jpg","permalink":"https://srnetochan.github.io/notes/go/advanced/files/","summary":"Condition if day == \u0026#34;sunday\u0026#34; || day == \u0026#34;saturday\u0026#34; { rest() } else if day == \u0026#34;monday\u0026#34; \u0026amp;\u0026amp; isTired() { groan() } else { work() } if _, err := doThing(); err != nil { fmt.Println(\u0026#34;Uh oh\u0026#34;)     ","tags":null,"title":"ফাইল ম্যানিপুলেশন"},{"categories":null,"contents":"Variable NAME=\u0026#34;John\u0026#34; echo $NAME echo \u0026#34;$NAME\u0026#34; echo \u0026#34;${NAME}    Condition if [[ -z \u0026#34;$string\u0026#34; ]]; then echo \u0026#34;String is empty\u0026#34; elif [[ -n \u0026#34;$string\u0026#34; ]]; then echo \u0026#34;String is not empty\u0026#34; fi     ","date":"January 1, 0001","hero":"/images/default-hero.jpg","permalink":"https://srnetochan.github.io/notes/bash/basic/","summary":"Variable NAME=\u0026#34;John\u0026#34; echo $NAME echo \u0026#34;$NAME\u0026#34; echo \u0026#34;${NAME}    Condition if [[ -z \u0026#34;$string\u0026#34; ]]; then echo \u0026#34;String is empty\u0026#34; elif [[ -n \u0026#34;$string\u0026#34; ]]; then echo \u0026#34;String is not empty\u0026#34; fi     ","tags":null,"title":"ব্যাশ ভেরিয়েবল"},{"categories":null,"contents":"Este archivo existe únicamente para responder a la URL /search con la plantilla de diseño search relacionada.\nNo se muestra ningún contenido aquí, todo el contenido se basa en la plantilla layouts/page/search.html\nEstablecer una prioridad muy baja en el mapa del sitio le dirá a los motores de búsqueda que éste no es un contenido importante.\nEsta implementación utiliza Fusejs, jquery y mark.js\nConfiguración inicial La búsqueda depende del tipo de contenido de salida adicional de JSON en config.toml\n``` [outputs] home = [\u0026ldquo;HTML\u0026rdquo;, \u0026ldquo;JSON\u0026rdquo;] ```\nBúsqueda de archivos adicionales Para buscar campos adicionales definidos en el front matter, debes añadirlo en 2 lugares.\nEditar layouts/_default/index.JSON Esto expone los valores en /index.json: por ejemplo, para agregar categories ``` \u0026hellip; \u0026ldquo;contents\u0026rdquo;:{{ .Content | plainify | jsonify }} {{ if .Params.tags }}, \u0026ldquo;tags\u0026rdquo;:{{ .Params.tags | jsonify }}{{end}}, \u0026ldquo;categories\u0026rdquo; : {{ .Params.categories | jsonify }}, \u0026hellip; ```\nEditar las opciones de fuse.js para buscar static/js/search.js ``` keys: [ \u0026ldquo;title\u0026rdquo;, \u0026ldquo;contents\u0026rdquo;, \u0026ldquo;tags\u0026rdquo;, \u0026ldquo;categories\u0026rdquo; ] ```\n","date":"June 8, 2010","hero":"/images/default-hero.jpg","permalink":"https://srnetochan.github.io/search/","summary":"Este archivo existe únicamente para responder a la URL /search con la plantilla de diseño search relacionada.\nNo se muestra ningún contenido aquí, todo el contenido se basa en la plantilla layouts/page/search.html\nEstablecer una prioridad muy baja en el mapa del sitio le dirá a los motores de búsqueda que éste no es un contenido importante.\nEsta implementación utiliza Fusejs, jquery y mark.js\nConfiguración inicial La búsqueda depende del tipo de contenido de salida adicional de JSON en config.","tags":null,"title":"Resultados de Búsqueda"},{"categories":null,"contents":"Este archivo existe únicamente para responder a la URL /search con la plantilla de diseño search relacionada.\nNo se muestra ningún contenido aquí, todo el contenido se basa en la plantilla layouts/page/search.html\nEstablecer una prioridad muy baja en el mapa del sitio le dirá a los motores de búsqueda que éste no es un contenido importante.\nEsta implementación utiliza Fusejs, jquery y mark.js\nConfiguración inicial La búsqueda depende del tipo de contenido de salida adicional de JSON en config.toml\n``` [outputs] home = [\u0026ldquo;HTML\u0026rdquo;, \u0026ldquo;JSON\u0026rdquo;] ```\nBúsqueda de archivos adicionales Para buscar campos adicionales definidos en el front matter, debes añadirlo en 2 lugares.\nEditar layouts/_default/index.JSON Esto expone los valores en /index.json: por ejemplo, para agregar categories ``` \u0026hellip; \u0026ldquo;contents\u0026rdquo;:{{ .Content | plainify | jsonify }} {{ if .Params.tags }}, \u0026ldquo;tags\u0026rdquo;:{{ .Params.tags | jsonify }}{{end}}, \u0026ldquo;categories\u0026rdquo; : {{ .Params.categories | jsonify }}, \u0026hellip; ```\nEditar las opciones de fuse.js para buscar static/js/search.js ``` keys: [ \u0026ldquo;title\u0026rdquo;, \u0026ldquo;contents\u0026rdquo;, \u0026ldquo;tags\u0026rdquo;, \u0026ldquo;categories\u0026rdquo; ] ```\n","date":"June 8, 2010","hero":"/images/default-hero.jpg","permalink":"https://srnetochan.github.io/search/","summary":"Este archivo existe únicamente para responder a la URL /search con la plantilla de diseño search relacionada.\nNo se muestra ningún contenido aquí, todo el contenido se basa en la plantilla layouts/page/search.html\nEstablecer una prioridad muy baja en el mapa del sitio le dirá a los motores de búsqueda que éste no es un contenido importante.\nEsta implementación utiliza Fusejs, jquery y mark.js\nConfiguración inicial La búsqueda depende del tipo de contenido de salida adicional de JSON en config.","tags":null,"title":"Resultados de Búsqueda"},{"categories":null,"contents":"This file exists solely to respond to /search URL with the related search layout template.\nNo content shown here is rendered, all content is based in the template layouts/page/search.html\nSetting a very low sitemap priority will tell search engines this is not important content.\nThis implementation uses Fusejs, jquery and mark.js\nInitial setup Search depends on additional output content type of JSON in config.toml ``` [outputs] home = [\u0026ldquo;HTML\u0026rdquo;, \u0026ldquo;JSON\u0026rdquo;] ```\nSearching additional fileds To search additional fields defined in front matter, you must add it in 2 places.\nEdit layouts/_default/index.JSON This exposes the values in /index.json i.e. add category ``` \u0026hellip; \u0026ldquo;contents\u0026rdquo;:{{ .Content | plainify | jsonify }} {{ if .Params.tags }}, \u0026ldquo;tags\u0026rdquo;:{{ .Params.tags | jsonify }}{{end}}, \u0026ldquo;categories\u0026rdquo; : {{ .Params.categories | jsonify }}, \u0026hellip; ```\nEdit fuse.js options to Search static/js/search.js ``` keys: [ \u0026ldquo;title\u0026rdquo;, \u0026ldquo;contents\u0026rdquo;, \u0026ldquo;tags\u0026rdquo;, \u0026ldquo;categories\u0026rdquo; ] ```\n","date":"June 8, 2010","hero":"/images/default-hero.jpg","permalink":"https://srnetochan.github.io/search/","summary":"This file exists solely to respond to /search URL with the related search layout template.\nNo content shown here is rendered, all content is based in the template layouts/page/search.html\nSetting a very low sitemap priority will tell search engines this is not important content.\nThis implementation uses Fusejs, jquery and mark.js\nInitial setup Search depends on additional output content type of JSON in config.toml ``` [outputs] home = [\u0026ldquo;HTML\u0026rdquo;, \u0026ldquo;JSON\u0026rdquo;] ```","tags":null,"title":"Search Results"},{"categories":null,"contents":"This file exists solely to respond to /search URL with the related search layout template.\nNo content shown here is rendered, all content is based in the template layouts/page/search.html\nSetting a very low sitemap priority will tell search engines this is not important content.\nThis implementation uses Fusejs, jquery and mark.js\nInitial setup Search depends on additional output content type of JSON in config.toml ``` [outputs] home = [\u0026ldquo;HTML\u0026rdquo;, \u0026ldquo;JSON\u0026rdquo;] ```\nSearching additional fileds To search additional fields defined in front matter, you must add it in 2 places.\nEdit layouts/_default/index.JSON This exposes the values in /index.json i.e. add category ``` \u0026hellip; \u0026ldquo;contents\u0026rdquo;:{{ .Content | plainify | jsonify }} {{ if .Params.tags }}, \u0026ldquo;tags\u0026rdquo;:{{ .Params.tags | jsonify }}{{end}}, \u0026ldquo;categories\u0026rdquo; : {{ .Params.categories | jsonify }}, \u0026hellip; ```\nEdit fuse.js options to Search static/js/search.js ``` keys: [ \u0026ldquo;title\u0026rdquo;, \u0026ldquo;contents\u0026rdquo;, \u0026ldquo;tags\u0026rdquo;, \u0026ldquo;categories\u0026rdquo; ] ```\n","date":"June 8, 2010","hero":"/images/default-hero.jpg","permalink":"https://srnetochan.github.io/search/","summary":"This file exists solely to respond to /search URL with the related search layout template.\nNo content shown here is rendered, all content is based in the template layouts/page/search.html\nSetting a very low sitemap priority will tell search engines this is not important content.\nThis implementation uses Fusejs, jquery and mark.js\nInitial setup Search depends on additional output content type of JSON in config.toml ``` [outputs] home = [\u0026ldquo;HTML\u0026rdquo;, \u0026ldquo;JSON\u0026rdquo;] ```","tags":null,"title":"Search Results"},{"categories":null,"contents":"This file exists solely to respond to /search URL with the related search layout template.\nNo content shown here is rendered, all content is based in the template layouts/page/search.html\nSetting a very low sitemap priority will tell search engines this is not important content.\nThis implementation uses Fusejs, jquery and mark.js\nInitial setup Search depends on additional output content type of JSON in config.toml ``` [outputs] home = [\u0026ldquo;HTML\u0026rdquo;, \u0026ldquo;JSON\u0026rdquo;] ```\nSearching additional fileds To search additional fields defined in front matter, you must add it in 2 places.\nEdit layouts/_default/index.JSON This exposes the values in /index.json i.e. add category ``` \u0026hellip; \u0026ldquo;contents\u0026rdquo;:{{ .Content | plainify | jsonify }} {{ if .Params.tags }}, \u0026ldquo;tags\u0026rdquo;:{{ .Params.tags | jsonify }}{{end}}, \u0026ldquo;categories\u0026rdquo; : {{ .Params.categories | jsonify }}, \u0026hellip; ```\nEdit fuse.js options to Search static/js/search.js ``` keys: [ \u0026ldquo;title\u0026rdquo;, \u0026ldquo;contents\u0026rdquo;, \u0026ldquo;tags\u0026rdquo;, \u0026ldquo;categories\u0026rdquo; ] ```\n","date":"June 8, 2010","hero":"/images/default-hero.jpg","permalink":"https://srnetochan.github.io/search/","summary":"This file exists solely to respond to /search URL with the related search layout template.\nNo content shown here is rendered, all content is based in the template layouts/page/search.html\nSetting a very low sitemap priority will tell search engines this is not important content.\nThis implementation uses Fusejs, jquery and mark.js\nInitial setup Search depends on additional output content type of JSON in config.toml ``` [outputs] home = [\u0026ldquo;HTML\u0026rdquo;, \u0026ldquo;JSON\u0026rdquo;] ```","tags":null,"title":"Search Results"},{"categories":null,"contents":"This file exists solely to respond to /search URL with the related search layout template.\nNo content shown here is rendered, all content is based in the template layouts/page/search.html\nSetting a very low sitemap priority will tell search engines this is not important content.\nThis implementation uses Fusejs, jquery and mark.js\nInitial setup Search depends on additional output content type of JSON in config.toml ``` [outputs] home = [\u0026ldquo;HTML\u0026rdquo;, \u0026ldquo;JSON\u0026rdquo;] ```\nSearching additional fileds To search additional fields defined in front matter, you must add it in 2 places.\nEdit layouts/_default/index.JSON This exposes the values in /index.json i.e. add category ``` \u0026hellip; \u0026ldquo;contents\u0026rdquo;:{{ .Content | plainify | jsonify }} {{ if .Params.tags }}, \u0026ldquo;tags\u0026rdquo;:{{ .Params.tags | jsonify }}{{end}}, \u0026ldquo;categories\u0026rdquo; : {{ .Params.categories | jsonify }}, \u0026hellip; ```\nEdit fuse.js options to Search static/js/search.js ``` keys: [ \u0026ldquo;title\u0026rdquo;, \u0026ldquo;contents\u0026rdquo;, \u0026ldquo;tags\u0026rdquo;, \u0026ldquo;categories\u0026rdquo; ] ```\n","date":"June 8, 2010","hero":"/images/default-hero.jpg","permalink":"https://srnetochan.github.io/search/","summary":"This file exists solely to respond to /search URL with the related search layout template.\nNo content shown here is rendered, all content is based in the template layouts/page/search.html\nSetting a very low sitemap priority will tell search engines this is not important content.\nThis implementation uses Fusejs, jquery and mark.js\nInitial setup Search depends on additional output content type of JSON in config.toml ``` [outputs] home = [\u0026ldquo;HTML\u0026rdquo;, \u0026ldquo;JSON\u0026rdquo;] ```","tags":null,"title":"Search Results"},{"categories":null,"contents":"This file exists solely to respond to /search URL with the related search layout template.\nNo content shown here is rendered, all content is based in the template layouts/page/search.html\nSetting a very low sitemap priority will tell search engines this is not important content.\nThis implementation uses Fusejs, jquery and mark.js\nInitial setup Search depends on additional output content type of JSON in config.toml ``` [outputs] home = [\u0026ldquo;HTML\u0026rdquo;, \u0026ldquo;JSON\u0026rdquo;] ```\nSearching additional fileds To search additional fields defined in front matter, you must add it in 2 places.\nEdit layouts/_default/index.JSON This exposes the values in /index.json i.e. add category ``` \u0026hellip; \u0026ldquo;contents\u0026rdquo;:{{ .Content | plainify | jsonify }} {{ if .Params.tags }}, \u0026ldquo;tags\u0026rdquo;:{{ .Params.tags | jsonify }}{{end}}, \u0026ldquo;categories\u0026rdquo; : {{ .Params.categories | jsonify }}, \u0026hellip; ```\nEdit fuse.js options to Search static/js/search.js ``` keys: [ \u0026ldquo;title\u0026rdquo;, \u0026ldquo;contents\u0026rdquo;, \u0026ldquo;tags\u0026rdquo;, \u0026ldquo;categories\u0026rdquo; ] ```\n","date":"June 8, 2010","hero":"/images/default-hero.jpg","permalink":"https://srnetochan.github.io/search/","summary":"This file exists solely to respond to /search URL with the related search layout template.\nNo content shown here is rendered, all content is based in the template layouts/page/search.html\nSetting a very low sitemap priority will tell search engines this is not important content.\nThis implementation uses Fusejs, jquery and mark.js\nInitial setup Search depends on additional output content type of JSON in config.toml ``` [outputs] home = [\u0026ldquo;HTML\u0026rdquo;, \u0026ldquo;JSON\u0026rdquo;] ```","tags":null,"title":"Search Results"},{"categories":null,"contents":"This file exists solely to respond to /search URL with the related search layout template.\nNo content shown here is rendered, all content is based in the template layouts/page/search.html\nSetting a very low sitemap priority will tell search engines this is not important content.\nThis implementation uses Fusejs, jquery and mark.js\nInitial setup Search depends on additional output content type of JSON in config.toml ``` [outputs] home = [\u0026ldquo;HTML\u0026rdquo;, \u0026ldquo;JSON\u0026rdquo;] ```\nSearching additional fileds To search additional fields defined in front matter, you must add it in 2 places.\nEdit layouts/_default/index.JSON This exposes the values in /index.json i.e. add category ``` \u0026hellip; \u0026ldquo;contents\u0026rdquo;:{{ .Content | plainify | jsonify }} {{ if .Params.tags }}, \u0026ldquo;tags\u0026rdquo;:{{ .Params.tags | jsonify }}{{end}}, \u0026ldquo;categories\u0026rdquo; : {{ .Params.categories | jsonify }}, \u0026hellip; ```\nEdit fuse.js options to Search static/js/search.js ``` keys: [ \u0026ldquo;title\u0026rdquo;, \u0026ldquo;contents\u0026rdquo;, \u0026ldquo;tags\u0026rdquo;, \u0026ldquo;categories\u0026rdquo; ] ```\n","date":"June 8, 2010","hero":"/images/default-hero.jpg","permalink":"https://srnetochan.github.io/search/","summary":"This file exists solely to respond to /search URL with the related search layout template.\nNo content shown here is rendered, all content is based in the template layouts/page/search.html\nSetting a very low sitemap priority will tell search engines this is not important content.\nThis implementation uses Fusejs, jquery and mark.js\nInitial setup Search depends on additional output content type of JSON in config.toml ``` [outputs] home = [\u0026ldquo;HTML\u0026rdquo;, \u0026ldquo;JSON\u0026rdquo;] ```","tags":null,"title":"Search Results"},{"categories":null,"contents":"This file exists solely to respond to /search URL with the related search layout template.\nNo content shown here is rendered, all content is based in the template layouts/page/search.html\nSetting a very low sitemap priority will tell search engines this is not important content.\nThis implementation uses Fusejs, jquery and mark.js\nInitial setup Search depends on additional output content type of JSON in config.toml ``` [outputs] home = [\u0026ldquo;HTML\u0026rdquo;, \u0026ldquo;JSON\u0026rdquo;] ```\nSearching additional fileds To search additional fields defined in front matter, you must add it in 2 places.\nEdit layouts/_default/index.JSON This exposes the values in /index.json i.e. add category ``` \u0026hellip; \u0026ldquo;contents\u0026rdquo;:{{ .Content | plainify | jsonify }} {{ if .Params.tags }}, \u0026ldquo;tags\u0026rdquo;:{{ .Params.tags | jsonify }}{{end}}, \u0026ldquo;categories\u0026rdquo; : {{ .Params.categories | jsonify }}, \u0026hellip; ```\nEdit fuse.js options to Search static/js/search.js ``` keys: [ \u0026ldquo;title\u0026rdquo;, \u0026ldquo;contents\u0026rdquo;, \u0026ldquo;tags\u0026rdquo;, \u0026ldquo;categories\u0026rdquo; ] ```\n","date":"June 8, 2010","hero":"/images/default-hero.jpg","permalink":"https://srnetochan.github.io/search/","summary":"This file exists solely to respond to /search URL with the related search layout template.\nNo content shown here is rendered, all content is based in the template layouts/page/search.html\nSetting a very low sitemap priority will tell search engines this is not important content.\nThis implementation uses Fusejs, jquery and mark.js\nInitial setup Search depends on additional output content type of JSON in config.toml ``` [outputs] home = [\u0026ldquo;HTML\u0026rdquo;, \u0026ldquo;JSON\u0026rdquo;] ```","tags":null,"title":"Search Results"},{"categories":null,"contents":"This file exists solely to respond to /search URL with the related search layout template.\nNo content shown here is rendered, all content is based in the template layouts/page/search.html\nSetting a very low sitemap priority will tell search engines this is not important content.\nThis implementation uses Fusejs, jquery and mark.js\nInitial setup Search depends on additional output content type of JSON in config.toml ``` [outputs] home = [\u0026ldquo;HTML\u0026rdquo;, \u0026ldquo;JSON\u0026rdquo;] ```\nSearching additional fileds To search additional fields defined in front matter, you must add it in 2 places.\nEdit layouts/_default/index.JSON This exposes the values in /index.json i.e. add category ``` \u0026hellip; \u0026ldquo;contents\u0026rdquo;:{{ .Content | plainify | jsonify }} {{ if .Params.tags }}, \u0026ldquo;tags\u0026rdquo;:{{ .Params.tags | jsonify }}{{end}}, \u0026ldquo;categories\u0026rdquo; : {{ .Params.categories | jsonify }}, \u0026hellip; ```\nEdit fuse.js options to Search static/js/search.js ``` keys: [ \u0026ldquo;title\u0026rdquo;, \u0026ldquo;contents\u0026rdquo;, \u0026ldquo;tags\u0026rdquo;, \u0026ldquo;categories\u0026rdquo; ] ```\n","date":"June 8, 2010","hero":"/images/default-hero.jpg","permalink":"https://srnetochan.github.io/search/","summary":"This file exists solely to respond to /search URL with the related search layout template.\nNo content shown here is rendered, all content is based in the template layouts/page/search.html\nSetting a very low sitemap priority will tell search engines this is not important content.\nThis implementation uses Fusejs, jquery and mark.js\nInitial setup Search depends on additional output content type of JSON in config.toml ``` [outputs] home = [\u0026ldquo;HTML\u0026rdquo;, \u0026ldquo;JSON\u0026rdquo;] ```","tags":null,"title":"Search Results"},{"categories":null,"contents":"This file exists solely to respond to /search URL with the related search layout template.\nNo content shown here is rendered, all content is based in the template layouts/page/search.html\nSetting a very low sitemap priority will tell search engines this is not important content.\nThis implementation uses Fusejs, jquery and mark.js\nInitial setup Search depends on additional output content type of JSON in config.toml ``` [outputs] home = [\u0026ldquo;HTML\u0026rdquo;, \u0026ldquo;JSON\u0026rdquo;] ```\nSearching additional fileds To search additional fields defined in front matter, you must add it in 2 places.\nEdit layouts/_default/index.JSON This exposes the values in /index.json i.e. add category ``` \u0026hellip; \u0026ldquo;contents\u0026rdquo;:{{ .Content | plainify | jsonify }} {{ if .Params.tags }}, \u0026ldquo;tags\u0026rdquo;:{{ .Params.tags | jsonify }}{{end}}, \u0026ldquo;categories\u0026rdquo; : {{ .Params.categories | jsonify }}, \u0026hellip; ```\nEdit fuse.js options to Search static/js/search.js ``` keys: [ \u0026ldquo;title\u0026rdquo;, \u0026ldquo;contents\u0026rdquo;, \u0026ldquo;tags\u0026rdquo;, \u0026ldquo;categories\u0026rdquo; ] ```\n","date":"June 8, 2010","hero":"/images/default-hero.jpg","permalink":"https://srnetochan.github.io/search/","summary":"This file exists solely to respond to /search URL with the related search layout template.\nNo content shown here is rendered, all content is based in the template layouts/page/search.html\nSetting a very low sitemap priority will tell search engines this is not important content.\nThis implementation uses Fusejs, jquery and mark.js\nInitial setup Search depends on additional output content type of JSON in config.toml ``` [outputs] home = [\u0026ldquo;HTML\u0026rdquo;, \u0026ldquo;JSON\u0026rdquo;] ```","tags":null,"title":"Search Results"},{"categories":null,"contents":"This file exists solely to respond to /search URL with the related search layout template.\nNo content shown here is rendered, all content is based in the template layouts/page/search.html\nSetting a very low sitemap priority will tell search engines this is not important content.\nThis implementation uses Fusejs, jquery and mark.js\nInitial setup Search depends on additional output content type of JSON in config.toml ``` [outputs] home = [\u0026ldquo;HTML\u0026rdquo;, \u0026ldquo;JSON\u0026rdquo;] ```\nSearching additional fileds To search additional fields defined in front matter, you must add it in 2 places.\nEdit layouts/_default/index.JSON This exposes the values in /index.json i.e. add category ``` \u0026hellip; \u0026ldquo;contents\u0026rdquo;:{{ .Content | plainify | jsonify }} {{ if .Params.tags }}, \u0026ldquo;tags\u0026rdquo;:{{ .Params.tags | jsonify }}{{end}}, \u0026ldquo;categories\u0026rdquo; : {{ .Params.categories | jsonify }}, \u0026hellip; ```\nEdit fuse.js options to Search static/js/search.js ``` keys: [ \u0026ldquo;title\u0026rdquo;, \u0026ldquo;contents\u0026rdquo;, \u0026ldquo;tags\u0026rdquo;, \u0026ldquo;categories\u0026rdquo; ] ```\n","date":"June 8, 2010","hero":"/images/default-hero.jpg","permalink":"https://srnetochan.github.io/search/","summary":"This file exists solely to respond to /search URL with the related search layout template.\nNo content shown here is rendered, all content is based in the template layouts/page/search.html\nSetting a very low sitemap priority will tell search engines this is not important content.\nThis implementation uses Fusejs, jquery and mark.js\nInitial setup Search depends on additional output content type of JSON in config.toml ``` [outputs] home = [\u0026ldquo;HTML\u0026rdquo;, \u0026ldquo;JSON\u0026rdquo;] ```","tags":null,"title":"Search Results"},{"categories":null,"contents":"This file exists solely to respond to /search URL with the related search layout template.\nNo content shown here is rendered, all content is based in the template layouts/page/search.html\nSetting a very low sitemap priority will tell search engines this is not important content.\nThis implementation uses Fusejs, jquery and mark.js\nInitial setup Search depends on additional output content type of JSON in config.toml ``` [outputs] home = [\u0026ldquo;HTML\u0026rdquo;, \u0026ldquo;JSON\u0026rdquo;] ```\nSearching additional fileds To search additional fields defined in front matter, you must add it in 2 places.\nEdit layouts/_default/index.JSON This exposes the values in /index.json i.e. add category ``` \u0026hellip; \u0026ldquo;contents\u0026rdquo;:{{ .Content | plainify | jsonify }} {{ if .Params.tags }}, \u0026ldquo;tags\u0026rdquo;:{{ .Params.tags | jsonify }}{{end}}, \u0026ldquo;categories\u0026rdquo; : {{ .Params.categories | jsonify }}, \u0026hellip; ```\nEdit fuse.js options to Search static/js/search.js ``` keys: [ \u0026ldquo;title\u0026rdquo;, \u0026ldquo;contents\u0026rdquo;, \u0026ldquo;tags\u0026rdquo;, \u0026ldquo;categories\u0026rdquo; ] ```\n","date":"June 8, 2010","hero":"/images/default-hero.jpg","permalink":"https://srnetochan.github.io/search/","summary":"This file exists solely to respond to /search URL with the related search layout template.\nNo content shown here is rendered, all content is based in the template layouts/page/search.html\nSetting a very low sitemap priority will tell search engines this is not important content.\nThis implementation uses Fusejs, jquery and mark.js\nInitial setup Search depends on additional output content type of JSON in config.toml ``` [outputs] home = [\u0026ldquo;HTML\u0026rdquo;, \u0026ldquo;JSON\u0026rdquo;] ```","tags":null,"title":"Search Results"},{"categories":null,"contents":"This file exists solely to respond to /search URL with the related search layout template.\nNo content shown here is rendered, all content is based in the template layouts/page/search.html\nSetting a very low sitemap priority will tell search engines this is not important content.\nThis implementation uses Fusejs, jquery and mark.js\nInitial setup Search depends on additional output content type of JSON in config.toml ``` [outputs] home = [\u0026ldquo;HTML\u0026rdquo;, \u0026ldquo;JSON\u0026rdquo;] ```\nSearching additional fileds To search additional fields defined in front matter, you must add it in 2 places.\nEdit layouts/_default/index.JSON This exposes the values in /index.json i.e. add category ``` \u0026hellip; \u0026ldquo;contents\u0026rdquo;:{{ .Content | plainify | jsonify }} {{ if .Params.tags }}, \u0026ldquo;tags\u0026rdquo;:{{ .Params.tags | jsonify }}{{end}}, \u0026ldquo;categories\u0026rdquo; : {{ .Params.categories | jsonify }}, \u0026hellip; ```\nEdit fuse.js options to Search static/js/search.js ``` keys: [ \u0026ldquo;title\u0026rdquo;, \u0026ldquo;contents\u0026rdquo;, \u0026ldquo;tags\u0026rdquo;, \u0026ldquo;categories\u0026rdquo; ] ```\n","date":"June 8, 2010","hero":"/images/default-hero.jpg","permalink":"https://srnetochan.github.io/search/","summary":"This file exists solely to respond to /search URL with the related search layout template.\nNo content shown here is rendered, all content is based in the template layouts/page/search.html\nSetting a very low sitemap priority will tell search engines this is not important content.\nThis implementation uses Fusejs, jquery and mark.js\nInitial setup Search depends on additional output content type of JSON in config.toml ``` [outputs] home = [\u0026ldquo;HTML\u0026rdquo;, \u0026ldquo;JSON\u0026rdquo;] ```","tags":null,"title":"Search Results"},{"categories":null,"contents":"This file exists solely to respond to /search URL with the related search layout template.\nNo content shown here is rendered, all content is based in the template layouts/page/search.html\nSetting a very low sitemap priority will tell search engines this is not important content.\nThis implementation uses Fusejs, jquery and mark.js\nInitial setup Search depends on additional output content type of JSON in config.toml ``` [outputs] home = [\u0026ldquo;HTML\u0026rdquo;, \u0026ldquo;JSON\u0026rdquo;] ```\nSearching additional fileds To search additional fields defined in front matter, you must add it in 2 places.\nEdit layouts/_default/index.JSON This exposes the values in /index.json i.e. add category ``` \u0026hellip; \u0026ldquo;contents\u0026rdquo;:{{ .Content | plainify | jsonify }} {{ if .Params.tags }}, \u0026ldquo;tags\u0026rdquo;:{{ .Params.tags | jsonify }}{{end}}, \u0026ldquo;categories\u0026rdquo; : {{ .Params.categories | jsonify }}, \u0026hellip; ```\nEdit fuse.js options to Search static/js/search.js ``` keys: [ \u0026ldquo;title\u0026rdquo;, \u0026ldquo;contents\u0026rdquo;, \u0026ldquo;tags\u0026rdquo;, \u0026ldquo;categories\u0026rdquo; ] ```\n","date":"June 8, 2010","hero":"/images/default-hero.jpg","permalink":"https://srnetochan.github.io/search/","summary":"This file exists solely to respond to /search URL with the related search layout template.\nNo content shown here is rendered, all content is based in the template layouts/page/search.html\nSetting a very low sitemap priority will tell search engines this is not important content.\nThis implementation uses Fusejs, jquery and mark.js\nInitial setup Search depends on additional output content type of JSON in config.toml ``` [outputs] home = [\u0026ldquo;HTML\u0026rdquo;, \u0026ldquo;JSON\u0026rdquo;] ```","tags":null,"title":"Search Results"},{"categories":null,"contents":"This file exists solely to respond to /search URL with the related search layout template.\nNo content shown here is rendered, all content is based in the template layouts/page/search.html\nSetting a very low sitemap priority will tell search engines this is not important content.\nThis implementation uses Fusejs, jquery and mark.js\nInitial setup Search depends on additional output content type of JSON in config.toml ``` [outputs] home = [\u0026ldquo;HTML\u0026rdquo;, \u0026ldquo;JSON\u0026rdquo;] ```\nSearching additional fileds To search additional fields defined in front matter, you must add it in 2 places.\nEdit layouts/_default/index.JSON This exposes the values in /index.json i.e. add category ``` \u0026hellip; \u0026ldquo;contents\u0026rdquo;:{{ .Content | plainify | jsonify }} {{ if .Params.tags }}, \u0026ldquo;tags\u0026rdquo;:{{ .Params.tags | jsonify }}{{end}}, \u0026ldquo;categories\u0026rdquo; : {{ .Params.categories | jsonify }}, \u0026hellip; ```\nEdit fuse.js options to Search static/js/search.js ``` keys: [ \u0026ldquo;title\u0026rdquo;, \u0026ldquo;contents\u0026rdquo;, \u0026ldquo;tags\u0026rdquo;, \u0026ldquo;categories\u0026rdquo; ] ```\n","date":"June 8, 2010","hero":"/images/default-hero.jpg","permalink":"https://srnetochan.github.io/search/","summary":"This file exists solely to respond to /search URL with the related search layout template.\nNo content shown here is rendered, all content is based in the template layouts/page/search.html\nSetting a very low sitemap priority will tell search engines this is not important content.\nThis implementation uses Fusejs, jquery and mark.js\nInitial setup Search depends on additional output content type of JSON in config.toml ``` [outputs] home = [\u0026ldquo;HTML\u0026rdquo;, \u0026ldquo;JSON\u0026rdquo;] ```","tags":null,"title":"Search Results"},{"categories":null,"contents":"This file exists solely to respond to /search URL with the related search layout template.\nNo content shown here is rendered, all content is based in the template layouts/page/search.html\nSetting a very low sitemap priority will tell search engines this is not important content.\nThis implementation uses Fusejs, jquery and mark.js\nInitial setup Search depends on additional output content type of JSON in config.toml ``` [outputs] home = [\u0026ldquo;HTML\u0026rdquo;, \u0026ldquo;JSON\u0026rdquo;] ```\nSearching additional fileds To search additional fields defined in front matter, you must add it in 2 places.\nEdit layouts/_default/index.JSON This exposes the values in /index.json i.e. add category ``` \u0026hellip; \u0026ldquo;contents\u0026rdquo;:{{ .Content | plainify | jsonify }} {{ if .Params.tags }}, \u0026ldquo;tags\u0026rdquo;:{{ .Params.tags | jsonify }}{{end}}, \u0026ldquo;categories\u0026rdquo; : {{ .Params.categories | jsonify }}, \u0026hellip; ```\nEdit fuse.js options to Search static/js/search.js ``` keys: [ \u0026ldquo;title\u0026rdquo;, \u0026ldquo;contents\u0026rdquo;, \u0026ldquo;tags\u0026rdquo;, \u0026ldquo;categories\u0026rdquo; ] ```\n","date":"June 8, 2010","hero":"/images/default-hero.jpg","permalink":"https://srnetochan.github.io/search/","summary":"This file exists solely to respond to /search URL with the related search layout template.\nNo content shown here is rendered, all content is based in the template layouts/page/search.html\nSetting a very low sitemap priority will tell search engines this is not important content.\nThis implementation uses Fusejs, jquery and mark.js\nInitial setup Search depends on additional output content type of JSON in config.toml ``` [outputs] home = [\u0026ldquo;HTML\u0026rdquo;, \u0026ldquo;JSON\u0026rdquo;] ```","tags":null,"title":"Search Results"},{"categories":null,"contents":"This file exists solely to respond to /search URL with the related search layout template.\nNo content shown here is rendered, all content is based in the template layouts/page/search.html\nSetting a very low sitemap priority will tell search engines this is not important content.\nThis implementation uses Fusejs, jquery and mark.js\nInitial setup Search depends on additional output content type of JSON in config.toml ``` [outputs] home = [\u0026ldquo;HTML\u0026rdquo;, \u0026ldquo;JSON\u0026rdquo;] ```\nSearching additional fileds To search additional fields defined in front matter, you must add it in 2 places.\nEdit layouts/_default/index.JSON This exposes the values in /index.json i.e. add category ``` \u0026hellip; \u0026ldquo;contents\u0026rdquo;:{{ .Content | plainify | jsonify }} {{ if .Params.tags }}, \u0026ldquo;tags\u0026rdquo;:{{ .Params.tags | jsonify }}{{end}}, \u0026ldquo;categories\u0026rdquo; : {{ .Params.categories | jsonify }}, \u0026hellip; ```\nEdit fuse.js options to Search static/js/search.js ``` keys: [ \u0026ldquo;title\u0026rdquo;, \u0026ldquo;contents\u0026rdquo;, \u0026ldquo;tags\u0026rdquo;, \u0026ldquo;categories\u0026rdquo; ] ```\n","date":"June 8, 2010","hero":"/images/default-hero.jpg","permalink":"https://srnetochan.github.io/search/","summary":"This file exists solely to respond to /search URL with the related search layout template.\nNo content shown here is rendered, all content is based in the template layouts/page/search.html\nSetting a very low sitemap priority will tell search engines this is not important content.\nThis implementation uses Fusejs, jquery and mark.js\nInitial setup Search depends on additional output content type of JSON in config.toml ``` [outputs] home = [\u0026ldquo;HTML\u0026rdquo;, \u0026ldquo;JSON\u0026rdquo;] ```","tags":null,"title":"Search Results"},{"categories":null,"contents":"This file exists solely to respond to /search URL with the related search layout template.\nNo content shown here is rendered, all content is based in the template layouts/page/search.html\nSetting a very low sitemap priority will tell search engines this is not important content.\nThis implementation uses Fusejs, jquery and mark.js\nInitial setup Search depends on additional output content type of JSON in config.toml ``` [outputs] home = [\u0026ldquo;HTML\u0026rdquo;, \u0026ldquo;JSON\u0026rdquo;] ```\nSearching additional fileds To search additional fields defined in front matter, you must add it in 2 places.\nEdit layouts/_default/index.JSON This exposes the values in /index.json i.e. add category ``` \u0026hellip; \u0026ldquo;contents\u0026rdquo;:{{ .Content | plainify | jsonify }} {{ if .Params.tags }}, \u0026ldquo;tags\u0026rdquo;:{{ .Params.tags | jsonify }}{{end}}, \u0026ldquo;categories\u0026rdquo; : {{ .Params.categories | jsonify }}, \u0026hellip; ```\nEdit fuse.js options to Search static/js/search.js ``` keys: [ \u0026ldquo;title\u0026rdquo;, \u0026ldquo;contents\u0026rdquo;, \u0026ldquo;tags\u0026rdquo;, \u0026ldquo;categories\u0026rdquo; ] ```\n","date":"June 8, 2010","hero":"/images/default-hero.jpg","permalink":"https://srnetochan.github.io/search/","summary":"This file exists solely to respond to /search URL with the related search layout template.\nNo content shown here is rendered, all content is based in the template layouts/page/search.html\nSetting a very low sitemap priority will tell search engines this is not important content.\nThis implementation uses Fusejs, jquery and mark.js\nInitial setup Search depends on additional output content type of JSON in config.toml ``` [outputs] home = [\u0026ldquo;HTML\u0026rdquo;, \u0026ldquo;JSON\u0026rdquo;] ```","tags":null,"title":"Search Results"},{"categories":null,"contents":"This file exists solely to respond to /search URL with the related search layout template.\nNo content shown here is rendered, all content is based in the template layouts/page/search.html\nSetting a very low sitemap priority will tell search engines this is not important content.\nThis implementation uses Fusejs, jquery and mark.js\nInitial setup Search depends on additional output content type of JSON in config.toml ``` [outputs] home = [\u0026ldquo;HTML\u0026rdquo;, \u0026ldquo;JSON\u0026rdquo;] ```\nSearching additional fileds To search additional fields defined in front matter, you must add it in 2 places.\nEdit layouts/_default/index.JSON This exposes the values in /index.json i.e. add category ``` \u0026hellip; \u0026ldquo;contents\u0026rdquo;:{{ .Content | plainify | jsonify }} {{ if .Params.tags }}, \u0026ldquo;tags\u0026rdquo;:{{ .Params.tags | jsonify }}{{end}}, \u0026ldquo;categories\u0026rdquo; : {{ .Params.categories | jsonify }}, \u0026hellip; ```\nEdit fuse.js options to Search static/js/search.js ``` keys: [ \u0026ldquo;title\u0026rdquo;, \u0026ldquo;contents\u0026rdquo;, \u0026ldquo;tags\u0026rdquo;, \u0026ldquo;categories\u0026rdquo; ] ```\n","date":"June 8, 2010","hero":"/images/default-hero.jpg","permalink":"https://srnetochan.github.io/search/","summary":"This file exists solely to respond to /search URL with the related search layout template.\nNo content shown here is rendered, all content is based in the template layouts/page/search.html\nSetting a very low sitemap priority will tell search engines this is not important content.\nThis implementation uses Fusejs, jquery and mark.js\nInitial setup Search depends on additional output content type of JSON in config.toml ``` [outputs] home = [\u0026ldquo;HTML\u0026rdquo;, \u0026ldquo;JSON\u0026rdquo;] ```","tags":null,"title":"Search Results"},{"categories":null,"contents":"This file exists solely to respond to /search URL with the related search layout template.\nNo content shown here is rendered, all content is based in the template layouts/page/search.html\nSetting a very low sitemap priority will tell search engines this is not important content.\nThis implementation uses Fusejs, jquery and mark.js\nInitial setup Search depends on additional output content type of JSON in config.toml ``` [outputs] home = [\u0026ldquo;HTML\u0026rdquo;, \u0026ldquo;JSON\u0026rdquo;] ```\nSearching additional fileds To search additional fields defined in front matter, you must add it in 2 places.\nEdit layouts/_default/index.JSON This exposes the values in /index.json i.e. add category ``` \u0026hellip; \u0026ldquo;contents\u0026rdquo;:{{ .Content | plainify | jsonify }} {{ if .Params.tags }}, \u0026ldquo;tags\u0026rdquo;:{{ .Params.tags | jsonify }}{{end}}, \u0026ldquo;categories\u0026rdquo; : {{ .Params.categories | jsonify }}, \u0026hellip; ```\nEdit fuse.js options to Search static/js/search.js ``` keys: [ \u0026ldquo;title\u0026rdquo;, \u0026ldquo;contents\u0026rdquo;, \u0026ldquo;tags\u0026rdquo;, \u0026ldquo;categories\u0026rdquo; ] ```\n","date":"June 8, 2010","hero":"/images/default-hero.jpg","permalink":"https://srnetochan.github.io/search/","summary":"This file exists solely to respond to /search URL with the related search layout template.\nNo content shown here is rendered, all content is based in the template layouts/page/search.html\nSetting a very low sitemap priority will tell search engines this is not important content.\nThis implementation uses Fusejs, jquery and mark.js\nInitial setup Search depends on additional output content type of JSON in config.toml ``` [outputs] home = [\u0026ldquo;HTML\u0026rdquo;, \u0026ldquo;JSON\u0026rdquo;] ```","tags":null,"title":"Search Results"},{"categories":null,"contents":"This file exists solely to respond to /search URL with the related search layout template.\nNo content shown here is rendered, all content is based in the template layouts/page/search.html\nSetting a very low sitemap priority will tell search engines this is not important content.\nThis implementation uses Fusejs, jquery and mark.js\nInitial setup Search depends on additional output content type of JSON in config.toml ``` [outputs] home = [\u0026ldquo;HTML\u0026rdquo;, \u0026ldquo;JSON\u0026rdquo;] ```\nSearching additional fileds To search additional fields defined in front matter, you must add it in 2 places.\nEdit layouts/_default/index.JSON This exposes the values in /index.json i.e. add category ``` \u0026hellip; \u0026ldquo;contents\u0026rdquo;:{{ .Content | plainify | jsonify }} {{ if .Params.tags }}, \u0026ldquo;tags\u0026rdquo;:{{ .Params.tags | jsonify }}{{end}}, \u0026ldquo;categories\u0026rdquo; : {{ .Params.categories | jsonify }}, \u0026hellip; ```\nEdit fuse.js options to Search static/js/search.js ``` keys: [ \u0026ldquo;title\u0026rdquo;, \u0026ldquo;contents\u0026rdquo;, \u0026ldquo;tags\u0026rdquo;, \u0026ldquo;categories\u0026rdquo; ] ```\n","date":"June 8, 2010","hero":"/images/default-hero.jpg","permalink":"https://srnetochan.github.io/search/","summary":"This file exists solely to respond to /search URL with the related search layout template.\nNo content shown here is rendered, all content is based in the template layouts/page/search.html\nSetting a very low sitemap priority will tell search engines this is not important content.\nThis implementation uses Fusejs, jquery and mark.js\nInitial setup Search depends on additional output content type of JSON in config.toml ``` [outputs] home = [\u0026ldquo;HTML\u0026rdquo;, \u0026ldquo;JSON\u0026rdquo;] ```","tags":null,"title":"Search Results"},{"categories":null,"contents":"This file exists solely to respond to /search URL with the related search layout template.\nNo content shown here is rendered, all content is based in the template layouts/page/search.html\nSetting a very low sitemap priority will tell search engines this is not important content.\nThis implementation uses Fusejs, jquery and mark.js\nInitial setup Search depends on additional output content type of JSON in config.toml ``` [outputs] home = [\u0026ldquo;HTML\u0026rdquo;, \u0026ldquo;JSON\u0026rdquo;] ```\nSearching additional fileds To search additional fields defined in front matter, you must add it in 2 places.\nEdit layouts/_default/index.JSON This exposes the values in /index.json i.e. add category ``` \u0026hellip; \u0026ldquo;contents\u0026rdquo;:{{ .Content | plainify | jsonify }} {{ if .Params.tags }}, \u0026ldquo;tags\u0026rdquo;:{{ .Params.tags | jsonify }}{{end}}, \u0026ldquo;categories\u0026rdquo; : {{ .Params.categories | jsonify }}, \u0026hellip; ```\nEdit fuse.js options to Search static/js/search.js ``` keys: [ \u0026ldquo;title\u0026rdquo;, \u0026ldquo;contents\u0026rdquo;, \u0026ldquo;tags\u0026rdquo;, \u0026ldquo;categories\u0026rdquo; ] ```\n","date":"June 8, 2010","hero":"/images/default-hero.jpg","permalink":"https://srnetochan.github.io/search/","summary":"This file exists solely to respond to /search URL with the related search layout template.\nNo content shown here is rendered, all content is based in the template layouts/page/search.html\nSetting a very low sitemap priority will tell search engines this is not important content.\nThis implementation uses Fusejs, jquery and mark.js\nInitial setup Search depends on additional output content type of JSON in config.toml ``` [outputs] home = [\u0026ldquo;HTML\u0026rdquo;, \u0026ldquo;JSON\u0026rdquo;] ```","tags":null,"title":"Search Results"},{"categories":null,"contents":"This file exists solely to respond to /search URL with the related search layout template.\nNo content shown here is rendered, all content is based in the template layouts/page/search.html\nSetting a very low sitemap priority will tell search engines this is not important content.\nThis implementation uses Fusejs, jquery and mark.js\nInitial setup Search depends on additional output content type of JSON in config.toml ``` [outputs] home = [\u0026ldquo;HTML\u0026rdquo;, \u0026ldquo;JSON\u0026rdquo;] ```\nSearching additional fileds To search additional fields defined in front matter, you must add it in 2 places.\nEdit layouts/_default/index.JSON This exposes the values in /index.json i.e. add category ``` \u0026hellip; \u0026ldquo;contents\u0026rdquo;:{{ .Content | plainify | jsonify }} {{ if .Params.tags }}, \u0026ldquo;tags\u0026rdquo;:{{ .Params.tags | jsonify }}{{end}}, \u0026ldquo;categories\u0026rdquo; : {{ .Params.categories | jsonify }}, \u0026hellip; ```\nEdit fuse.js options to Search static/js/search.js ``` keys: [ \u0026ldquo;title\u0026rdquo;, \u0026ldquo;contents\u0026rdquo;, \u0026ldquo;tags\u0026rdquo;, \u0026ldquo;categories\u0026rdquo; ] ```\n","date":"June 8, 2010","hero":"/images/default-hero.jpg","permalink":"https://srnetochan.github.io/search/","summary":"This file exists solely to respond to /search URL with the related search layout template.\nNo content shown here is rendered, all content is based in the template layouts/page/search.html\nSetting a very low sitemap priority will tell search engines this is not important content.\nThis implementation uses Fusejs, jquery and mark.js\nInitial setup Search depends on additional output content type of JSON in config.toml ``` [outputs] home = [\u0026ldquo;HTML\u0026rdquo;, \u0026ldquo;JSON\u0026rdquo;] ```","tags":null,"title":"অনুসন্ধানের ফলাফল"},{"categories":null,"contents":"This file exists solely to respond to /search URL with the related search layout template.\nNo content shown here is rendered, all content is based in the template layouts/page/search.html\nSetting a very low sitemap priority will tell search engines this is not important content.\nThis implementation uses Fusejs, jquery and mark.js\nInitial setup Search depends on additional output content type of JSON in config.toml ``` [outputs] home = [\u0026ldquo;HTML\u0026rdquo;, \u0026ldquo;JSON\u0026rdquo;] ```\nSearching additional fileds To search additional fields defined in front matter, you must add it in 2 places.\nEdit layouts/_default/index.JSON This exposes the values in /index.json i.e. add category ``` \u0026hellip; \u0026ldquo;contents\u0026rdquo;:{{ .Content | plainify | jsonify }} {{ if .Params.tags }}, \u0026ldquo;tags\u0026rdquo;:{{ .Params.tags | jsonify }}{{end}}, \u0026ldquo;categories\u0026rdquo; : {{ .Params.categories | jsonify }}, \u0026hellip; ```\nEdit fuse.js options to Search static/js/search.js ``` keys: [ \u0026ldquo;title\u0026rdquo;, \u0026ldquo;contents\u0026rdquo;, \u0026ldquo;tags\u0026rdquo;, \u0026ldquo;categories\u0026rdquo; ] ```\n","date":"June 8, 2010","hero":"/images/default-hero.jpg","permalink":"https://srnetochan.github.io/search/","summary":"This file exists solely to respond to /search URL with the related search layout template.\nNo content shown here is rendered, all content is based in the template layouts/page/search.html\nSetting a very low sitemap priority will tell search engines this is not important content.\nThis implementation uses Fusejs, jquery and mark.js\nInitial setup Search depends on additional output content type of JSON in config.toml ``` [outputs] home = [\u0026ldquo;HTML\u0026rdquo;, \u0026ldquo;JSON\u0026rdquo;] ```","tags":null,"title":"অনুসন্ধানের ফলাফল"},{"categories":["Sem categoria"],"contents":"As I was preparing a QGIS Project to read a database structured according to the new rules and technical specifications for the Portuguese Cartography, I started to configure the editing forms for several layers, so that:\n Make some fields read-only, like for example an identifier field. Configure widgets better suited for each field, to help the user and avoid errors. For example, date-time files with a pop-up calendar, and value lists with dropdown selectors.  Basically, I wanted something like this:\nLet me say that, in PostGIS layers, QGIS does a great job in figuring out the best widget to use for each field, as well as the constraints to apply. Which is a great help. Nevertheless, some need some extra configuration.\nIf I had only a few layers and fields, I would have done them all by hand, but after the 5th layer my personal mantra started to chime in:\n\"If you are using a computer to perform a repetitive manual task, you are doing it wrong!\" So, I began to think how could I configure the layers and fields more systematically. After some research and trial and error, I came up with the following PyQGIS functions.\nMake a field Read-only The identifier field (\u0026ldquo;identificador\u0026rdquo;) is automatically generated by the database. Therefore, the user shouldn\u0026rsquo;t edit it. So I had better make it read only\nTo make all the identifier fields read-only, I used the following code.\ndef field_readonly(layer, fieldname, option = True): fields = layer.fields() field_idx = fields.indexOf(fieldname) if field_idx \u0026gt;= 0: form_config = layer.editFormConfig() form_config.setReadOnly(field_idx, option) layer.setEditFormConfig(form_config) # Example for the field \u0026quot;identificador\u0026quot; project = QgsProject.instance() layers = project.mapLayers() for layer in layers.values(): field_readonly(layer,'identificador')  Set fields with DateTime widget The date fields are configured automatically, but the default widget setting only outputs the date, and not date-time, as the rules required. Besides, for my use case the date field can be automatically filled by usint the current time.\nI started by setting a field in a layer exactly how I wanted, then I tried to figure out how those setting were saved in PyQGIS using the Python console:\n\u0026gt;\u0026gt;\u0026gt;layer = iface.mapCanvas().currentLayer() \u0026gt;\u0026gt;\u0026gt;layer.fields().indexOf('inicio_objeto') 1 \u0026gt;\u0026gt;\u0026gt;field = layer.fields()[1] \u0026gt;\u0026gt;\u0026gt;field.editorWidgetSetup().type() 'DateTime' \u0026gt;\u0026gt;\u0026gt;field.editorWidgetSetup().config() {'allow_null': True, 'calendar_popup': True, 'display_format': 'yyyy-MM-dd HH:mm:ss', 'field_format': 'yyyy-MM-dd HH:mm:ss', 'field_iso_format': False}  Knowing this, I was able to create a function that allows configuring a field in a layer using the exact same settings, and apply it to all layers. As an extra, I have added a default valueDefinition to use the function now().\ndef field_to_datetime(layer, fieldname): config = {'allow_null': True, 'calendar_popup': True, 'display_format': 'yyyy-MM-dd HH:mm:ss', 'field_format': 'yyyy-MM-dd HH:mm:ss', 'field_iso_format': False} type = 'DateTime' fields = layer.fields() field_idx = fields.indexOf(fieldname) if field_idx \u0026gt;= 0: widget_setup = QgsEditorWidgetSetup(type,config) layer.setEditorWidgetSetup(field_idx, widget_setup) layer.setDefaultValueDefinition(field_idx, QgsDefaultValue('now()')) # Example applied to \u0026quot;inicio_objeto\u0026quot; e \u0026quot;fim_objeto\u0026quot; for layer in layers.values(): field_to_datetime(layer,'inicio_objeto')  Setting a field with the Value Relation widget In the data model, many tables have fields that only allow a limited number of values. Those values are referenced to other tables, the Foreign keys.\nIn these cases, it\u0026rsquo;s quite helpful to use a Value Relation widget. To configure fields with it in a programmatic way, it\u0026rsquo;s quite similar to the earlier example, where we first neet to set an example and see how it\u0026rsquo;s stored, but in this case, each field has a slightly different settings\nLuckily, whoever designed the data model, did a favor to us all by giving the same name to the fields and the related tables, making it possible to automatically adapt the settings for each case.\nThe function stars by gathering all fields in which the name starts with \u0026lsquo;valor_\u0026rsquo; (value). Then, iterating over those fields, adapts the configuration to use the reference layer that as the same name as the field.\ndef field_to_value_relation(layer): fields = layer.fields() pattern = re.compile(r'^valor_') fields_valor = [field for field in fields if pattern.match(field.name())] if len(fields_valor) \u0026gt; 0: config = {'AllowMulti': False, 'AllowNull': True, 'FilterExpression': '', 'Key': 'identificador', 'Layer': '', 'NofColumns': 1, 'OrderByValue': False, 'UseCompleter': False, 'Value': 'descricao'} for field in fields_valor: field_idx = fields.indexOf(field.name()) if field_idx \u0026gt;= 0: print(field) try: target_layer = QgsProject.instance().mapLayersByName(field.name())[0] config['Layer'] = target_layer.id() widget_setup = QgsEditorWidgetSetup('ValueRelation',config) layer.setEditorWidgetSetup(field_idx, widget_setup) except: pass else: return False else: return False return True # Correr função em todas as camadas for layer in layers.values(): field_to_value_relation(layer)  Conclusion In a relatively quick way, I was able to set all the project\u0026rsquo;s layers with the widgets I needed.This seems to me like the tip of the iceberg. If one has the need, with some search and patience, other configurations can be changed using PyQGIS. Therefore, think twice before embarking in configuring a big project, layer by layer, field by fields.\n","date":"September 30, 2019","hero":"/images/posts_hero/form_widget_pyqgis.png","permalink":"https://srnetochan.github.io/posts/tutorials/2019-09-30-norma-cartografica-no-qgis-alterar-formularios-de-edicao-com-pyqgis/","summary":"As I was preparing a QGIS Project to read a database structured according to the new rules and technical specifications for the Portuguese Cartography, I started to configure the editing forms for several layers, so that:\n Make some fields read-only, like for example an identifier field. Configure widgets better suited for each field, to help the user and avoid errors. For example, date-time files with a pop-up calendar, and value lists with dropdown selectors.","tags":["pyqgis","QGIS","Recart"],"title":"Configure editing form widgets using PyQGIS"},{"categories":["Sem categoria"],"contents":"QGIS recipes have been available on Conda for a while, but now, that they work for the three main operating systems, getting QGIS from Conda is s starting to become a reliable alternative to other QGIS distributions. Anyway, let\u0026rsquo;s rewind a bit\u0026hellip;\nWhat is Conda?\nConda is an open source package management system and environment management system that runs on Windows, macOS and Linux. Conda quickly installs, runs and updates packages and their dependencies. Conda easily creates, saves, loads and switches between environments on your local computer. It was created for Python programs, but it can package and distribute software for any language. Why is that of any relevance?\nConda provides a similar way to build, package and install QGIS (or any other software) in Linux, Windows, and Mac.\nAs a user, it\u0026rsquo;s the installation part that I enjoy the most. I am a Linux user, and one of the significant limitations is not having an easy way to install more than one version of QGIS on my machine (for example the latest stable version and the Long Term Release). I was able to work around that limitation by compiling QGIS myself, but with Conda, I can install as many versions as I want in a very convenient way.\nThe following paragraphs explain how to install QGIS using Conda. The instructions and Conda commands should be quite similar for all the operating systems.\nAnaconda or miniconda? First thing you need to do is to install the Conda packaging system. Two distributions install Conda: Anaconda and Miniconda.\nTL;DR Anaconda is big (3Gb?) and installs the packaging system and a lot of useful tools, python packages, libraries, etc\u0026hellip; . Miniconda is much smaller and installs just the packaging system, which is the bare minimum that you need to work with Conda and will allow you to selectively install the tools and packages you need. I prefer the later.\nFor more information, check this stack exchange answer on anaconda vs miniconda.\nDownload anaconda or miniconda installers for your system and follow the instructions to install it.\nWindows installer is an executable, you should run it as administrator. The OSX and Linux installers are bash scripts, which means that, once downloaded, you need to run something like this to install:\nbash Miniconda3-latest-Linux-x86_64.sh  Installing QGIS Notice that the Conda tools are used in a command line terminal. Besides, on Windows, you need to use the command prompt that is installed with miniconda.\nUsing environments Conda works with environments, which are similar to Python virtual environments but not limited only to python. Basically, it allows isolating different installations or setups without interfering with the rest of the system. I recommend that you always use environments. If, like me, you want to have more that one version of QGIS installed, then the use of environments is mandatory.\nCreating an environment is as easy as entering the following command on the terminal:\nconda create --name \u0026lt;name_of_the_environment\u0026gt;  For example,\nconda create --name qgis_stable  You can choose the version of python to use in your environment by adding the option python=\u0026lt;version\u0026gt;. Currently versions of QGIS run on python 3.6, 3.7, 3.8 and 3.9.\nconda create \u0026ndash;name qgis_stable python=3.7\nTo use an environment, you need to activate it.\nconda activate qgis_stable  Your terminal prompt will show you the active environment.\n(qgis_stable) aneto@oryx:~/miniconda3$  To deactivate the current environment, you run\nconda deactivate  Installing packages Installing packages using Conda is as simples as:\nconda install \u0026lt;package_name\u0026gt;  Because conda packages can be stored in different channels, and because the default channels (from the anaconda service) do not contain QGIS, we need to specify the channel we want to get the package from. conda-forge is a community-driven repository of conda recipes and includes updated QGIS packages.\nconda install qgis --channel conda-forge  Conda will download the latest available version of QGIS and all its dependencies installing it on the active environment.\nNote: Because conda always try to install the latest version, if you want to use the QGIS LTR version, you must specify the QGIS version.\nconda install qgis=3.10.12 --channel conda-forge\nUninstalling packages Uninstalling QGIS is also easy. The quickest option is to delete the entire environment where QGIS was installed. Make sure you deactivate it first.\nconda deactivate conda env remove --name qgis_stable\nAnother option is to remove QGIS package manually. This is useful if you have other packages installed that you want to keep.\nconda activate qgis_stable conda remove qgis -c conda-forge  This only removes the QGIS package and will leave all other packages that were installed with it. Note that you need to specify the conda-forge channel. Otherwise, Conda will try to update some packages from the default channels during the removal process, and things may get messy.\nRunning QGIS To run QGIS, in the terminal, activate the environment (if not activated already) and run the qgis command\nconda activate qgis_stable qgis  Updating QGIS To update QGIS to the most recent version, you need to run the following command with the respective environment active\nconda update qgis -c conda-forge  To update a patch release for the QGIS LTR version you run the install command again with the new version:\nconda install qgis=3.10.13 -c conda-forge  Some notes and caveats Please be aware that QGIS packages on Conda do not provide the same level of user experience as the official Linux, Windows, and Mac installer from the QGIS.org distribution. For example, there are no desktop icons or file association, it does not include GRASS and SAGA, etc \u0026hellip;\nOn the other hand, QGIS installations on Conda it will share user configurations, installed plugins, with any other QGIS installations on your system.\n","date":"May 29, 2019","hero":"/images/default-hero.jpg","permalink":"https://srnetochan.github.io/posts/tutorials/2019-05-29-using-qgis-from-conda/","summary":"QGIS recipes have been available on Conda for a while, but now, that they work for the three main operating systems, getting QGIS from Conda is s starting to become a reliable alternative to other QGIS distributions. Anyway, let\u0026rsquo;s rewind a bit\u0026hellip;\nWhat is Conda?\nConda is an open source package management system and environment management system that runs on Windows, macOS and Linux. Conda quickly installs, runs and updates packages and their dependencies.","tags":["conda","QGIS"],"title":"Using QGIS from Conda"},{"categories":null,"contents":"A year ago I have asked QGIS\u0026rsquo;s community what were their favourite QGIS new features from 2015 and published this blog post. This year I decided to ask it again. In 2016, we add the release of the second long-term release (2.14 LTR), and two other stable versions (2.16 and 2.18).\n2016 was again very productive year for the QGIS community, with lots of improvements and new features landing on QGIS source code, not to speak of all the work already in place for QGIS 3. This is a great assurance of the project\u0026rsquo;s vitality.\nAs a balance, I have asked users to choose wich were their favorite new features during 2016 (from the visual changelogs list). As a result, I got the following Top 5 features list.\n5 – Paste a style to multiple selected layers or to all layers in a legend group (2.14) This is a productivity functionaly that I just realized that existed now, with so many people voting on it. If copy/paste styles was, in my opinion, a killer feature, being able to use it in multiple layers or even a group is just great.\n4 – fTools plugin has been replaced with Processing algorithms (2.16) While checking the Vector Menu, the tools seem the same as previous version, but it\u0026rsquo;s when you open them that you understand the difference. All vector tools, provided until now by the fTools core plugin, were replaced by equivalent processing Algoritms. For the users it means easier access to more functionality, like running the tools in batch mode, or getting outputs as temporary layers. Besides some of the tools have been improved.\n3 – Virtual layers (2.14) This is definitly one of my favourite new features, and it seems I\u0026rsquo;m not alone. With virtual layers you can run SQL queries using the layers loaded in the project, even when the layers are not stored in a relational database. We are not talking about WHERE statments to filter data, with this you can do real SQL queries, with spatial analysis, aggregations, and so on. Besides, virtual layers will act as VIEWs and any changes to any of the input layers will automatically update the layer.\n2 – Speed and memory improvements (2.14) It\u0026rsquo;s no surprise that speed and memory improvements we one of the most voted features. Lots of improvements were made for loading and managing large datasets, and this have a tremendous impact in all users. According to the changelog, zoom is faster, selecting features is faster, updating attributes on selected features is faster, and it consumes less memory. So don\u0026rsquo;t be afraid to put QGIS to the test.\n1 – Trace digitising tool (2.14) If you do lots of digitising, you better look into this new feaure that landed on QGIS 2.14. It allows you to digitize new feature by using other layers boundaries. Besides the quality improvement of layers topology, this can make digitizing almost feel pleasing and fast! Just click the first point, move your mouse around other features edged to pick up more vertex.\nThere were other new features that also made the delight of many users. For example, several improvements on the labeling, Georeference outputs (eg PDF) from composer (2.16), Filter legend by expression (2.14), 2.5D Renderer. Personally, the Style docker made my day/year. But you can check the full results of the survey, if you like.\nObviously, this list means nothing at all. All new features were of tremendous value, and will be useful for thousands (yes thousands) of people. It was a mere exercise as, with such a diverse QGIS crowd, it would be impossible to build a list that would fit us all. Besides, there were many great enhancements, introduced during 2016, that might have fallen under the radar for most users. Check the visual changelogs for a full list of new features.\nOn my behalf, to all developers, sponsors, and general QGIS contributors, once again\nTHANK YOU VERY MUCH FOR YOUR TREMENDOUS WORK! I wish you a fantastic 2017. ","date":"January 5, 2017","hero":"/images/default-hero.jpg","permalink":"https://srnetochan.github.io/posts/news/2017-01-05-qgis-top-features-2016/","summary":"A year ago I have asked QGIS\u0026rsquo;s community what were their favourite QGIS new features from 2015 and published this blog post. This year I decided to ask it again. In 2016, we add the release of the second long-term release (2.14 LTR), and two other stable versions (2.16 and 2.18).\n2016 was again very productive year for the QGIS community, with lots of improvements and new features landing on QGIS source code, not to speak of all the work already in place for QGIS 3.","tags":["QGIS"],"title":"QGIS Top Features 2016"},{"categories":null,"contents":"(aka Features that ArcGIS Desktop users might not know that exists) From time to time, I read articles comparing ArcGIS vs QGIS. Since many of those articles are created from an ArcGIS user point of view, they invariably lead to biased observations on QGIS lack of features. It\u0026rsquo;s time for a QGIS user perspective, so bare with me on this (a bit) long, totally and openly biased post.\n\"Hello, my name is Alexandre, and I have been using... [QGIS](http://www.qgis.org)\" This is something I would say at an anonymous QGIS user therapy group. I\u0026rsquo;m willing to attend one of those because being recently and temporally forced to use ArcGIS Desktop again (don\u0026rsquo;t ask!), I really really really miss QGIS in many ways.\nThere was a time when I have used ArcGIS on the regular basis. I used it until version 9.3.1 and then decided to move away (toward the light) into QGIS (1.7.4 I think). At that time, I missed some (or even many?) ArcGIS features, but I was willing to accept it in exchange for the freedom of the Open Source philosophy. Since then, a lot have happened in the QGIS world, and I have been watching it closely. I would expect the same have happened in ArcGIS side, but, as far I can see, it didn\u0026rsquo;t.\nI\u0026rsquo;m using top shelf ArcGIS Desktop Advanced and I\u0026rsquo;m struggling to do very basic tasks that simply are nonexistent in ArcGIS. So here\u0026rsquo;s my short list of QGIS functionalities that I\u0026rsquo;m longing for. For those of you that use ArcGIS exclusively, some of this features may catch you by surprise.\nWarning: For those of you that use ArcGIS exclusively, some of this features may catch you by surprise.\nTransparency control \"ArcGIS have transparency! It's in the Display tab, in the layer's properties dialog!\" Yes, but\u0026hellip; you can only set transparency at the layer level. That is, either it\u0026rsquo;s all transparent, or it\u0026rsquo;s not\u0026hellip;\nIn QGIS on the other end, you can set transparency at layer level, feature/symbol level, and color level. You can say that this is being overrated, but check the differences in the following images.\nNotice that in QGIS you can set transparency at color level everywhere (or almost everywhere) there is a color to select. This includes annotations (like the ones in the image above), labels and composers items. You can even set transparency in colors by using the RGBA function in an expression! How sweet can that be? :-)\nBlending modes This is one of QGIS\u0026rsquo;s pristine jewels. The ability to combine layers the way you would do in almost any design/photo editing software. At layer or at feature level, you can control how they will \u0026ldquo;interact\u0026rdquo; with other layers or features below. Besides the normal mode, QGIS offers 12 other blending modes: Lighten, Screen, Dodge, Darken, Multiply, Burn, Overlay, Soft light, Hard light, Difference, and Subtract. Check this page to know more about the math behind each one and this image for some examples\nIt\u0026rsquo;s not easy to grasp how can this be of any use for cartography before you try it yourself. I had the chance to play around while trying to answer this question.\nA very common application for this functionality is when you want to add shadows to simulate the relief by putting a hill shade on top of other layers. In ArcGIS, you can only control the layer transparency, and the result is always a bit pale. But in QGIS, you can keep the strength of the original colors by using the multiply mode in the hill shade layer.\n[caption id=\u0026ldquo;attachment_1809\u0026rdquo; align=\u0026ldquo;alignnone\u0026rdquo; width=\u0026ldquo;1269\u0026rdquo;]Hypsometry original colors[/caption]\n[caption id=\u0026ldquo;attachment_1806\u0026rdquo; align=\u0026ldquo;alignnone\u0026rdquo; width=\u0026ldquo;1269\u0026rdquo;]Hypsometry colors paled by transparent hill shade[/caption]\n[caption id=\u0026ldquo;attachment_1805\u0026rdquo; align=\u0026ldquo;alignnone\u0026rdquo; width=\u0026ldquo;1269\u0026rdquo;]Hypsometry original colors with the hill shade using QGIS multiply blending[/caption]\nYou can also use blending modes in the print composer items, allowing you to combine them with other items and textures. This gives you the opportunity to make more \u0026ldquo;artistic\u0026rdquo; things without the need to go post-processing in a design software.\nColour Picker Menu Controlling color is a very important deal for a cartographer and QGIS allow you to control it like the professional you are. You can select your colours using many different interfaces. Interfaces that you might recognize from software like Inkscape, Photoshop, Gimp and others alike.\n[gallery ids=\u0026ldquo;1570,1569,1568\u0026rdquo; type=\u0026ldquo;rectangular\u0026rdquo;]\nMy favorite one is the color picker. Using color picker, you can pick colors from anywhere on your screen, either from QGIS itself or outside. This is quite handy and productive when you are trying to use a color from your map, it\u0026rsquo;s legend, a COLOURlovers palette or a company logo.\n[caption id=\u0026ldquo;attachment_1571\u0026rdquo; align=\u0026ldquo;alignnone\u0026rdquo; width=\u0026ldquo;862\u0026rdquo;]Picking a color from outside QGIS[/caption]\nYou can also copy/paste colors between dialogs, save and import color palettes, and you can even name a color and use it in a variable. With all this available for free, it\u0026rsquo;s hard to swallow Windows color selector :(.\n[gallery ids=\u0026ldquo;1555,1554\u0026rdquo; type=\u0026ldquo;rectangular\u0026rdquo; orderby=\u0026ldquo;rand\u0026rdquo;]\nVector symbols renderers \u0026ldquo;powertools\u0026rdquo; In ArcGIS, you have a few fancy ways to symbol your vector layers. You got: Single symbol, Unique values, Unique values many fields\u0026hellip; and so on. At the first glance, you may think that QGIS lacks some of them. Believe me, it doesn\u0026rsquo;t! In fact, QGIS offers much more flexibility when you need to symbol your layers.\nFor starters, it allows you to use fields or expressions on any of the symbols renderers, while ArcGIS only allows the use of fields. Powered by hundreds of functions and the ability to create your owns in python, what you can do with the expression builder has no limits. This means, for instance, that you can combine, select, recalculate, normalize an infinite number of fields to create your own \u0026ldquo;values\u0026rdquo; (not to mention that you can tweak your values labels, making it ideal to create the legend).\n[caption id=\u0026ldquo;attachment_1580\u0026rdquo; align=\u0026ldquo;alignnone\u0026rdquo; width=\u0026ldquo;825\u0026rdquo;]QGIS Graduated renderer using an expression to calculate population density[/caption]\nAnd then, in QGIS, you have the special (and kinda very specific) renderers, that make you say \u0026ldquo;wooooh\u0026rdquo;. Like the Inverted polygons that allow you to fill the the outside of polygons (nice to mask other features), the Point displacement to show points that are too close to each others, and the Heatmap that will transform, ON-THE-FLY, all your points in a layer into a nice heatmap without the need to convert them to raster (and that will update as soon as you, or anyone else, edits the point features).\n[caption id=\u0026ldquo;attachment_1583\u0026rdquo; align=\u0026ldquo;alignnone\u0026rdquo; width=\u0026ldquo;777\u0026rdquo;]Inverted Polygon Renderer masking the outside of an interest area[/caption]\nBut I have left the best to the end. The \u0026ldquo;One rendered to Rule them all\u0026rdquo;, the Rule-based symbols. With the rule-based renderer, you can add several rules, group them in a tree structure, and set each one with a desired symbol. This gives QGIS users full control of their layer\u0026rsquo;s symbols, and, paired with expression builder and data-defined properties, opens the door to many wonderful applications.\n[caption id=\u0026ldquo;attachment_1589\u0026rdquo; align=\u0026ldquo;alignnone\u0026rdquo; width=\u0026ldquo;869\u0026rdquo;]Rule-based renderer[/caption]\nAtlas One of my favorite (and missed) features in QGIS is the Map Composer\u0026rsquo;s Atlas. I know that ArcGIS has its own \u0026ldquo;Atlas\u0026rdquo;, the Data Driven Pages, but frankly, it\u0026rsquo;s simply not the same.\nI believe you know the basic functionally that both software allow. You create a map layout and choose a vector layer as coverage, and it will create an output panned or zoomed for each of the layer\u0026rsquo;s feature. You can also add some labels that will change according to the layers attributes.\nBut in QGIS, things go a little bit further\u0026hellip;\nBasically, you can use coverage layer\u0026rsquo;s attributes and geometry anywhere you can use an expression. And, in QGIS, expressions are everywhere. That way, most layers and map composer items properties can be controlled by a single coverage layer.\nWith the right configuration, while iterating over the atlas coverage features, you can, choose what feature to show and what features to hide, change a theme color for your map, rotate and resize your page acording to the feature size, choose a specific logo to came along with your map, and much more. Once again, the sky is the limit.\n[caption id=\u0026ldquo;attachment_535\u0026rdquo; align=\u0026ldquo;aligncenter\u0026rdquo; width=\u0026ldquo;506\u0026rdquo;]Auto-resized maps that fits the coverage features at specific scale using atlas[/caption]\nSo, if you pair Atlas it with QGIS data-defined properties,** rule-based symbols** and expressions, ArcGIS Data Driven Pages are no match. You don\u0026rsquo;t think so? Try to answer this question then.\nTip: If you really want to leverage your map production, using Spatialite or Postgis databases you can create the perfect atlas coverage layers from views that fit your needs. No data redundancy and they are always updated.\nLabel and Style dialogs This one is more of a User Experience thing than an actual feature, but you won\u0026rsquo;t imagine how refreshing it is to have all Style and Labels options in two single dialogs (with several tabs, of course).\nUsing the symbol menu in ArcGIS makes me feel like if I\u0026rsquo;m in the Inception movie, at some point in time, I no longer know where the hell am I. For example, to apply a dashed outline in a fill symbol I needed to open 5 different dialogs, and then go back clicking OK, OK, OK, OK \u0026hellip;\n[caption id=\u0026ldquo;attachment_1244\u0026rdquo; align=\u0026ldquo;aligncenter\u0026rdquo; width=\u0026ldquo;1499\u0026rdquo;]ArcGIS \u0026ldquo;Inception\u0026rdquo; symbol settings[/caption]\nIn QGIS, once in the properties menu, every setting is (almost) one click way. And you just need to press OK (or Apply ) once to see the result!\n[caption id=\u0026ldquo;attachment_1561\u0026rdquo; align=\u0026ldquo;alignnone\u0026rdquo; width=\u0026ldquo;907\u0026rdquo;]QGIS Style setting[/caption]\nAs an extra, you can copy/paste styles from one layer to another, making styling several layers even faster. And now you say:\n\"Don't be silly! In ArcGIS you can import symbols from other layers too.\" Symbols? yes. Labels? No! And if you had lots of work setting your fancy labels, having to do the exact same/similar thing in another layer, it will make you wanna cry\u0026hellip; I did.\n(I think I will leave the multiple styles per layer vs data frames comparison for another time)\nWFS \"Say what?!!\" Yup, that\u0026rsquo;s it, ArcGIS Desktop lacks support for WFS OGC standard unless you buy an extra extension: The Data Interoperability Extention.\nIn a GIS world that, more and more, is evolving towards Open Data, Open Standards and OGC Web Services, this reveals a very mercantile approach by ESRI. If I were an ESRI customer, I would feel outraged. Or maybe not\u0026hellip; maybe I would thank the opportunity to yet invest some more money in it\u0026rsquo;s really advanced features\u0026hellip;\u0026lt;\\sarcasm\u0026gt;\nIn QGIS, like everything else, WFS is absolutely free (as in freedom, not free beer). All you need to do is add the WFS server\u0026rsquo;s URL, and you can add all the layers you want, with the absolute sure that they are as updated as you can get.\nFortunately for ArcGIS users with a low budget, they can easily make a request for a layer using the internet browser :-P.\nhttp://giswebservices.massgis.state.ma.us/geoserver/wfs?request=GetFeature\u0026amp;service=wfs\u0026amp;version=1.0.0\u0026amp;typename=massgis:GISDATA.TOWNS_POLY\u0026amp;outputformat=SHAPE-ZIP  Or they can simply use QGIS to download it. But, in both cases, be aware that the layers won\u0026rsquo;t update themselves by magic.\nExpression builder I have already mentioned the use of expressions several times, but for those of you that do not know the expression Builder, I though I end my post with one of my all time favourite features in QGIS.\nI do not know enough of ArcGIS expression builder to really criticize it. But, AFAIK, you can use it to create labels and to populate a field using the field calculator. I know that there are many functions that you can use (I have used just a few) but they are not visible to the common user (you probably need to consult the ArcGIS Desktop Help to know them all). And you can create your own functions in VBScript, Python, and JsScript.\nOn QGIS side, like I said before, the Expression Builder can be used almost everywhere, and this makes it very convenient for many different purposes. In terms of functions, you have hundreds of functions right there in the builder\u0026rsquo;s dialog, with the corresponding syntax help, and some examples. You also have the fields and values like in ArcGIS, and you even have a \u0026ldquo;recent expressions\u0026rdquo; group for re-using recent expressions with no the need to remember prior expression.\nBesides, you can create your own functions using Python (no VBScript or JsScript). For this purpose, you have a separate tab with a function editor. The editor have code highlighting and save your functions in your user area, making it available for later use (even for other QGIS sessions).\nConclusion These are certainly not the only QGIS features that I miss, and they are probably not the most limiting ones (for instance, not being able to fully work with Spatialite and Postgis databases will make, for sure, my life miserable in the near future), but they were the ones I noticed right away when I (re)open ArcGIS for the first time.\nI also feel that, based on the QGIS current development momentum, with each QGIS Changelog, the list will grow very fast. And although I haven\u0026rsquo;t tested ArcGIS Pro, I don\u0026rsquo;t think ESRI will be able to keep the pace.\n\u0026ldquo;Are there things I still miss from ArcGIS?\u0026rdquo; Sure. I miss CMYK color support while exporting maps, for instance. But not as much as I miss QGIS now. Besides, I know that those will be addressed sooner or later.\nIn the end, I kinda enjoyed the opportunity to go back to ArcGIS, as it reinforced the way I think about QGIS. It\u0026rsquo;s all about freedom! Not only the freedom to use the software (that I was already aware) but also the freedom to control software itself and it\u0026rsquo;s outputs. Maintaining the users friendliness for new users, a lot have been done to make power users life easier, and they feel very pleased with it (at least I am).\n  All this being said, the winner is\u0026hellip; QGIS!!\n  The End (of a very biased post) ","date":"January 28, 2016","hero":"/images/default-hero.jpg","permalink":"https://srnetochan.github.io/posts/opinion/2016-01-28-saudades-do-qgis-enquanto-uso-arcgis/","summary":"(aka Features that ArcGIS Desktop users might not know that exists) From time to time, I read articles comparing ArcGIS vs QGIS. Since many of those articles are created from an ArcGIS user point of view, they invariably lead to biased observations on QGIS lack of features. It\u0026rsquo;s time for a QGIS user perspective, so bare with me on this (a bit) long, totally and openly biased post.\n\"Hello, my name is Alexandre, and I have been using.","tags":["ArcGIS","Opinion","QGIS"],"title":"QGIS Features I long for while using ArcGIS"},{"categories":null,"contents":"With the release of the first long term release (2.8 LTR), and two other stable versions (2.10 and 2.12), 2015 was a great (and busy) year for the QGIS community, with lots of improvements and new features landing on QGIS source code.\nAs a balance, I have asked users to choose wich were their favorite new features during 2015 (from the visual changelogs list). As a result I got the following Top 5 features list.\n5 - Python console improvements (2.8) Since QGIS 2.8, we can drag and drop python scripts into QGIS window and they will be executed automatically. There is also a new a toolbar icon in the plugins toolbar and a shortcut ( Ctrl-Alt-P) for quick access to the python console.\n4 - Processing new algorithms (2.8) Also in QGIS 2.8, there were introduced some new algorithms to the processing framework. If you are into spatial analysis this must have done your day (or year).\n * **Regular points** algorithm * **Symmetrical difference** algorithm * **Vector split** algorithm * **Vector grid** algorithm * **Hypsometric curves** calculation algorithm * **Split lines with lines** * **Refactor fields** attributes manipulation algorithm  3 - Show rule-based renderer’s legend as a tree (2.8) There were introduced a few nice improvements to QGIS legend. Version 2.8 brought us a tree presentation for the rule-based renderer. Better still, each node in the tree can be toggled on/off individually providing for great flexibility in which sublayers get rendered in your map.\n2 - Advanced digitizing tools (2.8) If you ever wished you could digitize lines exactly parallel or at right angles, lock lines to specific angles and so on in QGIS? Since QGIS 2.8 you can! The advanced digitizing tools are a port of the CADinput plugin and adds a new panel to QGIS. The panel becomes active when capturing new geometries or geometry parts.\n1 - Rule-based labeling (2.12) This was a very awaited feature (at least by me), and it was voted by the majority of users. Since 2.12, you can style features labels using rules. This gives us even more control over placement and styling of labels. Just like the rule based cartographic rendering, label rules can be nested to allow for extremely flexible styling options. For example, you can render labels differently based on the size of the feature they will be rendered into (as illustrated in the screenshot).\nThere were other new features that also made the delight of many users. For example, the Improved/consistent projection selection (2.8), PostGIS provider improvements (2.12), Geometry Checker and Geometry Snapper plugins (2.12), and Multiple styles per layer (2.8).\nDon\u0026rsquo;t agree with this list? You can still cast your votes. You can also check the complete results in here.\nObviously, this list means nothing at all. I was a mere exercise as with such a diverse QGIS crowd it would be impossible to build a list that would fit us all. Besides, there were many great enhancements, introduced during 2015, that might have fallen under the radar for most users. Check the visual changelogs for a full list of new features.\nOn my behalf, to all developers, sponsors and general QGIS contributors,\nTHANK YOU VERY MUCH FOR YOUR TREMENDOUS WORK! I wish you a fantastic (and productive) 2016. ","date":"January 1, 2016","hero":"/images/default-hero.jpg","permalink":"https://srnetochan.github.io/posts/news/2016-01-01-qgis-top-features-2015/","summary":"With the release of the first long term release (2.8 LTR), and two other stable versions (2.10 and 2.12), 2015 was a great (and busy) year for the QGIS community, with lots of improvements and new features landing on QGIS source code.\nAs a balance, I have asked users to choose wich were their favorite new features during 2015 (from the visual changelogs list). As a result I got the following Top 5 features list.","tags":["QGIS"],"title":"QGIS Top Features 2015"},{"categories":null,"contents":"Today I needed to create a view in PostGIS that returned the vertexes of a multi-polygon layer. Besides, I needed that they were numerically ordered starting in 1, and with the respective XY coordinates.\nIt seemed to be a trivial task – all I would need was to use the ST_DumpPoints() function to get all vertexes – if it wasn\u0026rsquo;t for the fact that PostGIS polygons have a duplicate vertex (the last vertex must be equal to the first one) that I have no interess in showing.\nAfter some try-and-fail, I came up with the following query:\n[code language=\u0026ldquo;SQL\u0026rdquo;] CREATE OR REPLACE VIEW public.my_polygons_vertexes AS WITH t AS \u0026ndash; Transfor polygons in sets of points (SELECT id_polygon, st_dumppoints(geom) AS dump FROM public.my_polygons), f AS \u0026ndash; Get the geometry and the indexes from the sets of points (SELECT t.id_polygon, (t.dump).path[1] AS part, (t.dump).path[3] AS vertex, (t.dump).geom AS geom FROM t) \u0026ndash; Get all points filtering the last point for each geometry part SELECT row_number() OVER () AS gid, \u0026ndash; Creating a unique id f.id_polygon, f.part, f.vertex, ST_X(f.geom) as x, \u0026ndash; Get point\u0026rsquo;s X coordinate ST_Y(f.geom) as y, \u0026ndash; Get point\u0026rsquo;s Y coordinate f.geom::geometry(\u0026lsquo;POINT\u0026rsquo;,4326) as geom \u0026ndash; make sure of the resulting geometry type FROM f WHERE (f.id_polygon, f.part, f.vertex) NOT IN (SELECT f.id_polygon, f.part, max(f.vertex) AS max FROM f GROUP BY f.id_polygon, f.part); [/code]\nThe interesting part occurs in the WHERE clause, basically, from the list of all vertexes, only the ones not included in the list of vertexes with the maximum index by polygon part are showed, that is, the last vertex of each polygon part.\nHere\u0026rsquo;s the result:\n\nThe advantage of this approach (using PostGIS) instead of using \u0026ldquo;Polygons to Lines\u0026rdquo; and \u0026ldquo;Lines to points\u0026rdquo; processing tools is that we just need to change the polygons layer, and save it, to see our vertexes get updated automatically. It\u0026rsquo;s because of this kind of stuff that I love PostGIS.\n","date":"November 6, 2015","hero":"/images/default-hero.jpg","permalink":"https://srnetochan.github.io/posts/tutorials/2015-11-06-obter-os-vertices-de-multipoligonos-em-postgis/","summary":"Today I needed to create a view in PostGIS that returned the vertexes of a multi-polygon layer. Besides, I needed that they were numerically ordered starting in 1, and with the respective XY coordinates.\nIt seemed to be a trivial task – all I would need was to use the ST_DumpPoints() function to get all vertexes – if it wasn\u0026rsquo;t for the fact that PostGIS polygons have a duplicate vertex (the last vertex must be equal to the first one) that I have no interess in showing.","tags":["Postgis"],"title":"Getting multipolygon vertexes using PostGIS"},{"categories":null,"contents":"Now and then I get too many map symbols (points) in the same place, and I thought how nice it would be if we could drag n' drop them around without messing with their geometries position, just like we do with labels. That thought gave me an idea for a cool hack.\nChoose your point layer and start by creating two new fields called symbX and symbY (Type: Decimal number; Size: 20; Precision: 5). Now go the layer properties and in the Style tab edit your symbol. For each level of your symbol select \u0026ldquo;map units\u0026rdquo; as the offset units, and set the following expression in the offset data define properties option:\n[code]\nCASE WHEN symbX IS NOT NULL AND symbY IS NOT NULL THEN tostring($x - symbX) + \u0026lsquo;,\u0026rsquo; + tostring($y - symbY) ELSE \u0026lsquo;0,0\u0026rsquo; END\n[/code]\n\nBe aware that, if your coordinates have negative values, you need to adapt the code. E.g., If you have negative values in X you should use \u0026ldquo;tostring(symbX -$x)\u0026rdquo; instead.\nNow, temporarly label your layer with a small convenient text (I used a centered \u0026lsquo;+\u0026rsquo; (plus sign) with a white buffer) and set its coordinates to data defined using the symbX and symbY Fields.\n\nFrom this point on, when you use the move label tool, not only the label position change but also the actual symbol! Pretty cool, isn\u0026rsquo;t it?\n\nNotice that the features geometries are not changed during the process. Also, remember that in this case you can also add leading lines to connect the symbols to the original position of the points.\n","date":"February 23, 2015","hero":"/images/default-hero.jpg","permalink":"https://srnetochan.github.io/posts/tutorials/2015-02-23-dica-para-ajustar-posicao-de-simbolos-em-qgis-hack-to-adjust-map-symbols-location-in-qgis/","summary":"Now and then I get too many map symbols (points) in the same place, and I thought how nice it would be if we could drag n' drop them around without messing with their geometries position, just like we do with labels. That thought gave me an idea for a cool hack.\nChoose your point layer and start by creating two new fields called symbX and symbY (Type: Decimal number; Size: 20; Precision: 5).","tags":["Cartography","Hint","QGIS"],"title":"Hack to adjust map symbols location in QGIS"},{"categories":null,"contents":"I had the need to add columns with the coordinates of polygons centroids. I came up with the following expressions to calculate X e Y, respectively:\n[code] xmin(centroid($geometry)) ymin(centroid($geometry)) [/code]\nThe expression seems quite simple, but it toke me some time before I realize that, not having a x(geometry) and y(geometry) functions, I could use the xmin() and ymin() to get the coordinates of the polygons centroids. Since this wasn\u0026rsquo;t the first time I had to use this expressions, this post will work as a reminder for the future.\n","date":"February 10, 2015","hero":"/images/default-hero.jpg","permalink":"https://srnetochan.github.io/posts/tutorials/2015-02-10-calcular-coordenadas-do-centroide-de-poligonos-calculate-polygon-centroids-coordinates/","summary":"I had the need to add columns with the coordinates of polygons centroids. I came up with the following expressions to calculate X e Y, respectively:\n[code] xmin(centroid($geometry)) ymin(centroid($geometry)) [/code]\nThe expression seems quite simple, but it toke me some time before I realize that, not having a x(geometry) and y(geometry) functions, I could use the xmin() and ymin() to get the coordinates of the polygons centroids. Since this wasn\u0026rsquo;t the first time I had to use this expressions, this post will work as a reminder for the future.","tags":["Hint","QGIS"],"title":"Calculate polygon centroid's coordinates"},{"categories":null,"contents":"Recently I had the need to add labels to features with very close geometries, resulting in their collision.\nUsing data-defined override for label\u0026rsquo;s position (I have usedlayer to labeled layer plugin to set this really fast) and the QGIS tool to move labels, it was quite easy to relocate them to better places. However, in same cases, it was difficult to understand to which geometry they belonged.\nI needed some kind of leading lines to connect, whenever necessary, label and feature. I knew another great plugin called \u0026ldquo;Easy Custom Labeling\u0026rdquo;, by Regis Haubourg, that did what I needed, but it would create a memory duplicate of the original layer, wish meant that any edition on the original layer wouldn\u0026rsquo;t be updated in the labels.\nSince the data were stored in a PostgreSQL/Postgis database, I have decided to create a query that would return a layer with leading lines. I used the following query in DB manager:\n[code language=\u0026ldquo;SQL\u0026rdquo;] SELECT gid, label, ST_Makeline(St_setSRID(ST_PointOnSurface(geom),27493), St_setSRID(St_Point(x_label::numeric, y_label::numeric),27493)) FROM epvu.sgev WHERE x_label IS NOT NULL AND y_label IS NOT NULL AND NOT ST_Within(ST_Makeline(St_setSRID(ST_PointOnSurface(geom),27493), St_setSRID(St_Point(x_label::numeric, y_label::numeric),27493)),geom))[/code]\nThis query creates a line by using the feature centroid as starting point and the label coordinate as end point. The last condition on the WHERE statement assures that the lines are only created for labels outside the feature.\n\nWith the resulting layer loaded in my project, all I need is to move my labels and save the edition (and press refresh) to show a nice leading line.\n\n","date":"January 12, 2015","hero":"/images/default-hero.jpg","permalink":"https://srnetochan.github.io/posts/tutorials/2015-01-12-etiquetas-com-guias-em-qgis-e-postgis-labels-leading-lines-with-qgis-and-postgis/","summary":"Recently I had the need to add labels to features with very close geometries, resulting in their collision.\nUsing data-defined override for label\u0026rsquo;s position (I have usedlayer to labeled layer plugin to set this really fast) and the QGIS tool to move labels, it was quite easy to relocate them to better places. However, in same cases, it was difficult to understand to which geometry they belonged.\nI needed some kind of leading lines to connect, whenever necessary, label and feature.","tags":["Cartography","Hint","Postgis","QGIS"],"title":"Labels leading lines with QGIS and Postgis"},{"categories":null,"contents":"In my last post, I have tried to show how I used QGIS 2.6 to create a map series where the page\u0026rsquo;s orientation adapted to the shape of the atlas features. This method is useful when the final scale of the maps is irrelevant, or when the size of the atlas elements is similar, allowing one to use a fixed scale. On the other hand, when using a fixed scale is mandatory and the features size are too different, it is needed to change the size of the paper. In this second part ot the post, I will try to show how I came to a solution for that.\nAs a base, I used the map created in the previous post, from which I did a duplicate. To exemplify the method, I tried to create a map series at 1:2.000.000 scale. Since I was going to change both width and height of the paper, I did not need to set an orientation, and therefore, I deactivated the data defined properties of the orientation option:\nith some maths with the map scale, the size of the atlas feature and the already defined margins, I came up with the following expressions to use, respectively, in width and height:\n((bounds_width( $atlasgeometry ) / 2000000.0) * 1000.0) * 1.1 + 10 ((bounds_height( $atlasgeometry ) / 2000000.0) * 1000.0) * 1.1 + 30  Allow me to clarify. (bounds_width( $atlasgeometry ) / 2000000.0) is the atlas feature\u0026rsquo;s width in meters when represented at 1:2.000.000. This is multiplied by 1000 to convert it to millimeters (the composer\u0026rsquo;s settings units). In order to keep the atlas feature not to close to the margin, I have decided to add 10% of margin around it, hence the multiplication by 1.1. To finish I add the map margins value that were already set in the previous post (i.e.,20 mm, 5 mm, 10 mm, 5 mm)\nAs one can see from the previous image, after setting the expressions in the paper width and height options, it\u0026rsquo;s size already changed according to the size of the atlas features. But, as expected, all the itens stubbornly kept their positions.For that reason, it has been necessary to change the size and position expressions for each of then.\nStarting by the map item size, the expressions to use in width and height were not difficult to understand since they would be the paper size without the margins size:\n((bounds_width( $atlasgeometry ) / 2000000.0) * 1000.0) * 1.1 ((bounds_height( $atlasgeometry ) / 2000000.0) * 1000.0) * 1.1  \nTo position the items correctly, all was needed was to replace the \u0026ldquo;CASE WHEN \u0026hellip; THEN \u0026hellip; END\u0026rdquo; statement by the expressions defined before. For instance, the expressions used in the X and Y options for the legend position:\n(CASE WHEN bounds_width( $atlasgeometry ) \u0026gt;= bounds_height( $atlasgeometry) THEN 297 ELSE 210 END) - 7 (CASE WHEN bounds_width( $atlasgeometry ) \u0026gt;= bounds_height( $atlasgeometry) THEN 210 ELSE 297 END) - 12  Became, respectively:\n(((bounds_width( $atlasgeometry ) / 2000000.0) * 1000.0) * 1.1 + 10) - 7 (((bounds_height( $atlasgeometry ) / 2000000.0) * 1000.0) * 1.1 + 30) - 12  \nChanging the expressions of the X and Y position options for the remaining composer\u0026rsquo;s items I have reached the final layout.\n\nOnce again, printing/exporting all (25) maps was only one click away.\n\nSince QGIS allows exporting the composer as georeferenced images, opening all maps in QGIS I got this interesting result.\n\nAs one can see by the results, using this method, we can get some quite strange formats. That is why in the 3rd and last post of this article, I will try to show how to create a fixed scale map series using standard paper formats (A4, A3, A2, A1 e A0).\nDisclaimer: I’m not an English native speaker, therefore I apologize for any errors, and I will thank any advice on how to improve the text.\n","date":"November 18, 2014","hero":"/images/default-hero.jpg","permalink":"https://srnetochan.github.io/posts/tutorials/2014-11-18-series-de-mapas-com-formatos-multiplos-em-qgis-2-6-parte-2-multiple-format-map-series-using-qgis-2-6-part-21/","summary":"In my last post, I have tried to show how I used QGIS 2.6 to create a map series where the page\u0026rsquo;s orientation adapted to the shape of the atlas features. This method is useful when the final scale of the maps is irrelevant, or when the size of the atlas elements is similar, allowing one to use a fixed scale. On the other hand, when using a fixed scale is mandatory and the features size are too different, it is needed to change the size of the paper.","tags":["atlas","Map composer","QGIS"],"title":"Multiple format map series using QGIS 2.6 – Part 2"},{"categories":null,"contents":"As always, the new QGIS version (QGIS 2.6 Brigthon) brings a vast new set of features that will allow the user to do more, better and faster than with the earlier version. One of this features is the ability to control some of the composer\u0026rsquo;s items properties with data (for instance, size and position). Something that will allow lots of new interesting usages. In the next posts, I propose to show how to create map series with multiple formats.\nIn this first post, the goal is that, keeping the page size, the map is created with the most suitable orientation (landscape or portrait) to fit the atlas feature. To exemplify, I will be using the Alaska\u0026rsquo;s sample dataset to create a map for each of Alaska\u0026rsquo;s regions.\nI have started by creating the layout in one of the formats, putting the items in the desired positions.\n\nTo control the page orientation with the atlas feature, in the composition tab, I used the following expression in the orientation data defined properties:\nCASE WHEN bounds_width( $atlasgeometry ) \u0026gt;= bounds_height( $atlasgeometry ) THEN 'landscape' ELSE 'portrait' END  Using the atlas preview, I could verify that the page\u0026rsquo;s orientation changed according to the form of the atlas feature. However, the composition\u0026rsquo;s items did not follow this change and some got even outside the printing area\n\nTo control both size and position of the composition\u0026rsquo;s items I had in consideration the A4 page size (297 x 210 mm), the map margins ( 20 mm, 5 mm, 10 mm, 5 mm) and the item\u0026rsquo;s reference points.\nFor the map item, using the upper left corner as reference point, it was necessary to change it\u0026rsquo;s height and width. I knew that the item height was the subtraction of the top and bottom margins (30 mm) from the page height, therefore I used the following expression:\n(CASE WHEN bounds_width( $atlasgeometry ) \u0026gt;= bounds_height( $atlasgeometry) THEN 297 ELSE 210 END) - 30  Likewise, the expression to use in the width was:\n(CASE WHEN bounds_width( $atlasgeometry ) \u0026gt;= bounds_height( $atlasgeometry) THEN 210 ELSE 297 END) - 10  \nThe rest of the items were always at a relative position of the page without the need to change their size and therefore only needed to control their position. For example, the title was centered at the page\u0026rsquo;s top, and therefore, using the top-center as reference point, all that was needed was the following expression for the X position:\n\n(CASE WHEN bounds_width( $atlasgeometry ) \u0026gt;= bounds_height( $atlasgeometry) THEN 297 ELSE 210 END) / 2.0  \nOn the other hand, the legend needed to change the position in both X and Y. Using the bottom-right-corner as reference point, the X position expression was:\n(CASE WHEN bounds_width( $atlasgeometry ) \u0026gt;= bounds_height( $atlasgeometry) THEN 297 ELSE 210 END) - 7  And for the Y position:\n(CASE WHEN bounds_width( $atlasgeometry ) \u0026gt;= bounds_height( $atlasgeometry) THEN 210 ELSE 297 END) - 12  \nFor the remaining items (North arrow, scalebar, and bottom left text), the expression were similar to the ones already mentioned, and, after setting them for each item, I got a layout that would adapt to both page orientation.\n\nFrom that point, printing/exporting all (25) maps was one click away.\n\nIn the next post of the series, I will try to explain how to create map series where it\u0026rsquo;s the size of the page that change to keep the scale\u0026rsquo;s value of the scale constant.\n","date":"November 9, 2014","hero":"/images/default-hero.jpg","permalink":"https://srnetochan.github.io/posts/tutorials/2014-11-09-series-de-mapas-com-formatos-multiplos-em-qgis-2-6-parte-1-multiple-format-map-series-using-qgis-2-6-part-1/","summary":"As always, the new QGIS version (QGIS 2.6 Brigthon) brings a vast new set of features that will allow the user to do more, better and faster than with the earlier version. One of this features is the ability to control some of the composer\u0026rsquo;s items properties with data (for instance, size and position). Something that will allow lots of new interesting usages. In the next posts, I propose to show how to create map series with multiple formats.","tags":["atlas","Cartography","Composer","QGIS"],"title":"Multiple format map series using QGIS 2.6 - Part 1"},{"categories":null,"contents":"Some time ago in the qgis-pt mailing list, someone asked how to show the coordinates of a map corners using QGIS. Since this features wasn\u0026rsquo;t available (yet), I have tried to reach a automatic solution, but without success, After some thought about it and after reading a blog post by Nathan Woodrow, it came to me that the solution could be creating a user defined function for the expression builder to be used in labels in the map.\nClosely following the blog post instructions, I have created a file called userfunctions.py in the .qgis2/python folder and, with a help from Nyall Dawson I wrote the following code.\n[code language=\u0026ldquo;Python\u0026rdquo;] from qgis.utils import qgsfunction, iface from qgis.core import QGis\n@qgsfunction(2,\u0026ldquo;python\u0026rdquo;) def map_x_min(values, feature, parent): \u0026quot;\u0026quot;\u0026quot; Returns the minimum x coordinate of a map from a specific composer. \u0026quot;\u0026quot;\u0026quot; composer_title = values[0] map_id = values[1] composers = iface.activeComposers() for composer_view in composers(): composer_window = composer_view.composerWindow() window_title = composer_window.windowTitle() if window_title == composer_title: composition = composer_view.composition() map = composition.getComposerMapById(map_id) if map: extent = map.currentMapExtent() break result = extent.xMinimum() return result [/code]\nAfter running the command import userfunctions in the python console (Plugins \u0026gt; Python Console), it was already possible to use the map_x_min() function (from the python category) in an expression to get the minimum X value of the map.\nAll I needed now was to create the other three functions, map_x_max(), map_y_min() and** map_y_max()**. Since part of the code would be repeated, I have decided to put it in a function called map_bound(), that would use the print composer title and map id as arguments, and return the map extent (in the form of a QgsRectangle).\n[code language=\u0026ldquo;Python\u0026rdquo;] from qgis.utils import qgsfunction, iface from qgis.core import QGis\ndef map_bounds(composer_title, map_id): \u0026quot;\u0026quot;\u0026quot; Returns a rectangle with the bounds of a map from a specific composer \u0026quot;\u0026quot;\u0026quot; composers = iface.activeComposers() for composer_view in composers: composer_window = composer_view.composerWindow() window_title = composer_window.windowTitle() if window_title == composer_title: composition = composer_view.composition() map = composition.getComposerMapById(map_id) if map: extent = map.currentMapExtent() break else: extent = None\nreturn extent[/code]\nWith this function available, I could now use it in the other functions to obtain the map X and Y minimum and maximum values, making the code more clear and easy to maintain. I also add some mechanisms to the original code to prevent errors.\n[code language=\u0026ldquo;Python\u0026rdquo;] @qgsfunction(2,\u0026ldquo;python\u0026rdquo;) def map_x_min(values, feature, parent): \u0026quot;\u0026quot;\u0026quot; Returns the minimum x coordinate of a map from a specific composer. Calculations are in the Spatial Reference System of the project.\nSyntax map_x_min(composer_title, map_id) Arguments composer_title - is string. The title of the composer where the map is. map_id - integer. The id of the map. Example map_x_min('my pretty map', 0) - -12345.679 \u0026quot;\u0026quot;\u0026quot; composer_title = values[0] map_id = values[1] map_extent = map_bounds(composer_title, map_id) if map_extent: result = map_extent.xMinimum() else: result = None\nreturn result\n@qgsfunction(2,\u0026ldquo;python\u0026rdquo;) def map_x_max(values, feature, parent): \u0026quot;\u0026quot;\u0026quot; Returns the maximum x coordinate of a map from a specific composer. Calculations are in the Spatial Reference System of the project.\nSyntax map_x_max(composer_title, map_id) Arguments composer_title - is string. The title of the composer where the map is. map_id - integer. The id of the map. Example map_x_max('my pretty map', 0) - 12345.679 \u0026quot;\u0026quot;\u0026quot; composer_title = values[0] map_id = values[1] map_extent = map_bounds(composer_title, map_id) if map_extent: result = map_extent.xMaximum() else: result = None\nreturn result\n@qgsfunction(2,\u0026ldquo;python\u0026rdquo;) def map_y_min(values, feature, parent): \u0026quot;\u0026quot;\u0026quot; Returns the minimum y coordinate of a map from a specific composer. Calculations are in the Spatial Reference System of the project.\nSyntax map_y_min(composer_title, map_id) Arguments composer_title - is string. The title of the composer where the map is. map_id - integer. The id of the map. Example map_y_min('my pretty map', 0) - -12345.679 \u0026quot;\u0026quot;\u0026quot; composer_title = values[0] map_id = values[1] map_extent = map_bounds(composer_title, map_id) if map_extent: result = map_extent.yMinimum() else: result = None\nreturn result\n@qgsfunction(2,\u0026ldquo;python\u0026rdquo;) def map_y_max(values, feature, parent): \u0026quot;\u0026quot;\u0026quot; Returns the maximum y coordinate of a map from a specific composer. Calculations are in the Spatial Reference System of the project.\nSyntax map_y_max(composer_title, map_id) Arguments composer_title - is string. The title of the composer where the map is. map_id - integer. The id of the map. Example map_y_max('my pretty map', 0) - 12345.679 \u0026quot;\u0026quot;\u0026quot; composer_title = values[0] map_id = values[1] map_extent = map_bounds(composer_title, map_id) if map_extent: result = map_extent.yMaximum() else: result = None\nreturn result[/code]\nThe functions became available to the expression builder in the \u0026ldquo;Python\u0026rdquo; category (could have been any other name) and the functions descriptions are formatted as help texts to provide the user all the information needed to use them.\nUsing the created functions, it was now easy to put the corner coordinates in labels near the map corners. Any change to the map extents is reflected in the label, therefore quite useful to use with the atlas mode.\n\nThe functions result can be used with other functions. In the following image, there is an expression to show the coordinates in a more compact way.\n\nThere was a setback\u0026hellip; For the functions to become available, it was necessary to manually import them in each QGIS session. Not very practical. Again with Nathan\u0026rsquo;s help, I found out that it\u0026rsquo;s possible to import python modules at QGIS startup by putting a startup.py file with the import statements in the .qgis2/python folder. In my case, this was enough.\n[code language=\u0026ldquo;Python\u0026rdquo;] import userfunctions [/code]\nI was pretty satisfied with the end result. The ability to create your own functions in expressions demonstrates once more how easy it is to customize QGIS and create your own tools. I\u0026rsquo;m already thinking in more applications for this amazing functionality.\n\nYou can download the Python files with the functions HERE. Just unzip both files to the .qgis2/python folder, and restart QGIS, and the functions should become available.\n**Disclaimer: **I\u0026rsquo;m not an English native speaker, therefore I apologize for any errors, and I will thank any advice on how to improve the text.\n","date":"September 9, 2014","hero":"/images/default-hero.jpg","permalink":"https://srnetochan.github.io/posts/tutorials/2014-09-09-coordenadas-dos-cantos-do-mapa-em-qgis-map-corner-coordinates-in-qgis/","summary":"Some time ago in the qgis-pt mailing list, someone asked how to show the coordinates of a map corners using QGIS. Since this features wasn\u0026rsquo;t available (yet), I have tried to reach a automatic solution, but without success, After some thought about it and after reading a blog post by Nathan Woodrow, it came to me that the solution could be creating a user defined function for the expression builder to be used in labels in the map.","tags":["Cartography","python","QGIS","tutorial"],"title":"Map corner coordinates in QGIS"},{"categories":null,"contents":"It\u0026rsquo;s not the first time I see people that, to select feature by their fields values, use expressions like this:\n[code language=\u0026ldquo;SQL\u0026rdquo;]\u0026ldquo;field\u0026rdquo; = \u0026lsquo;value1\u0026rsquo; OR \u0026ldquo;field\u0026rdquo; = \u0026lsquo;value2\u0026rsquo; OR \u0026ldquo;field\u0026rdquo; = \u0026lsquo;value3\u0026rsquo; [OR \u0026hellip;][/code]\nA more practical and pretty way of doing this is by using the IN operator instead.\n[code language=\u0026ldquo;SQL\u0026rdquo;]\u0026ldquo;field\u0026rdquo; IN (\u0026lsquo;value1\u0026rsquo;,\u0026lsquo;value2\u0026rsquo;,\u0026lsquo;value3\u0026rsquo;[,\u0026hellip;])[/code]\nThis operator is available in almost every GIS software I know. In QGIS, it can be used even if there isn\u0026rsquo;t a small little button to click. In fact, this is an abbreviation of what is used in SQL, where the operator is used in the WHERE statement:\n[code language=\u0026ldquo;SQL\u0026rdquo;] SELECT * FROM parks WHERE \u0026ldquo;tipo\u0026rdquo; IN (\u0026lsquo;PI\u0026rsquo;,\u0026lsquo;CM\u0026rsquo;,\u0026lsquo;PJ\u0026rsquo;); [/code]\n","date":"June 24, 2014","hero":"/images/default-hero.jpg","permalink":"https://srnetochan.github.io/posts/tutorials/2014-06-24-use-o-operador-in-sff-please-use-the-in-operator/","summary":"It\u0026rsquo;s not the first time I see people that, to select feature by their fields values, use expressions like this:\n[code language=\u0026ldquo;SQL\u0026rdquo;]\u0026ldquo;field\u0026rdquo; = \u0026lsquo;value1\u0026rsquo; OR \u0026ldquo;field\u0026rdquo; = \u0026lsquo;value2\u0026rsquo; OR \u0026ldquo;field\u0026rdquo; = \u0026lsquo;value3\u0026rsquo; [OR \u0026hellip;][/code]\nA more practical and pretty way of doing this is by using the IN operator instead.\n[code language=\u0026ldquo;SQL\u0026rdquo;]\u0026ldquo;field\u0026rdquo; IN (\u0026lsquo;value1\u0026rsquo;,\u0026lsquo;value2\u0026rsquo;,\u0026lsquo;value3\u0026rsquo;[,\u0026hellip;])[/code]\nThis operator is available in almost every GIS software I know. In QGIS, it can be used even if there isn\u0026rsquo;t a small little button to click.","tags":["QGIS","SQL"],"title":"Please use the \"IN\" operador"},{"categories":null,"contents":"Inspired in a post by Anita Graser, I\u0026rsquo;ve tried to use QGIS to create a Cascais\u0026rsquo;s old looking map, as if it have been drawn by hand in a methodical way.\nDefining the styles I have started by defining the styles for each elements to represent.\nBuildings To fill the buildings, I have tried to use a color that reminds me the portuguese roofs, similar to the color commonly used in old maps of cities, with a slightly darker outline of the same color.\nTo give a bit of dimension, a shadow was created beneath, using a \u0026ldquo;simple fill\u0026rdquo; with dark colors and using a Offset X,Y. The values were chosen assuming the predominant direction of building\u0026rsquo;s facades, so that the effect could be seen all over the map area.\n\nGreen spaces For the green spaces, 3 symbol layers were used. One with a green \u0026ldquo;simple fill\u0026rdquo;. A second one with a thick outline (outline: simple line) in a darker green, and using the new 2.2 functionality that allows one to show outlines only in the polygons inside.\nThe last symbol layer is just a tin line of a green even darker than the other two.\n[ ](/images/2014/04/capturar_7.png)\nThe Sea For the sea, the same effect as the green spaces was used, but in blues and with the middle outline even thicker. \nRoads In the road, it was used a thick line with a orange pastel color. Some street names labels were created on top of the line using a script font (in have used Pristina Bold). To improve the label readability, a small white buffer with 50% transparency was added. \nBeach In the beaches, besides a simple fill as background, a point patern fill was used with a very small dot. \nMap composing Though the map is looking almost done, it\u0026rsquo;s in the print composer that the final touches are given. First, the map sheet is totally covered with an image of an old papel (the same used by Anita). A bit of transparency is added (20%), so that the effect is not too strong.\n\nAlterwards, the actual map is added, and in the map item properties, the rendering mode is changed from \u0026ldquo;normal\u0026rdquo; (by default) to \u0026ldquo;multiply\u0026rdquo;. This way it looks like if the map was draw directly on the old paper.\nAfter this, it\u0026rsquo;s all about adding a few more labels (the beach and places names), a north arrow and the graphic scale (always using \u0026ldquo;multiply\u0026rdquo; rendering mode), and\u0026hellip; Voilá, we have a map!\n\n","date":"April 14, 2014","hero":"/images/default-hero.jpg","permalink":"https://srnetochan.github.io/posts/tutorials/2014-04-14-mapa-envelhecido-aged-map/","summary":"Inspired in a post by Anita Graser, I\u0026rsquo;ve tried to use QGIS to create a Cascais\u0026rsquo;s old looking map, as if it have been drawn by hand in a methodical way.\nDefining the styles I have started by defining the styles for each elements to represent.\nBuildings To fill the buildings, I have tried to use a color that reminds me the portuguese roofs, similar to the color commonly used in old maps of cities, with a slightly darker outline of the same color.","tags":["QGIS"],"title":"Old map in QGIS"},{"categories":null,"contents":"This QGIS plugin Multipart Split allows the user to, during edition, split the active layer’s selected multipart features into single part features. Unlike the “Multipart to single part” from the Vector \u0026gt; Geometry Tools menu, the plugin only splits the selected elements, and does not need to create new files.\nInstallation The plugin is available in the QGIS official repository, therefore the installation is done in the Manage and Install Plugins (Plugins \u0026gt; Manage and Install plugins…).\nUsage With the selected vector layer in edition mode (Layer \u0026gt; Toogle edition), select all elements that you want to split e click the plugin’s icon available in the Advanced digitizing toolbar (View \u0026gt; Toolbars \u0026gt; Advanced digitizing) or in View \u0026gt; Split Feature(s) Part(s). In the end, a message with the results will be showed in the top of the map canvas. (Note that the icons on gets active if you select a layer in edition that has, at least, one selected feature)\nPage: http://plugins.qgis.org/plugins/splitmultipart/\nRepository: https://github.com/SrNetoChan/MultipartSplit\n","date":"March 25, 2014","hero":"/images/default-hero.jpg","permalink":"https://srnetochan.github.io/posts/plugins/multipart-split/","summary":"This QGIS plugin Multipart Split allows the user to, during edition, split the active layer’s selected multipart features into single part features. Unlike the “Multipart to single part” from the Vector \u0026gt; Geometry Tools menu, the plugin only splits the selected elements, and does not need to create new files.\nInstallation The plugin is available in the QGIS official repository, therefore the installation is done in the Manage and Install Plugins (Plugins \u0026gt; Manage and Install plugins…).","tags":null,"title":"Multipart Split"},{"categories":null,"contents":"I have finally \u0026ldquo;finished\u0026rdquo; my new plugin. I uses some quotation marks, since I believe that there is still space for a few improvement. This plugin arised with the need to calculate the travel time for the Cascais oficial pedestrian routes, and started as a simple python script. I have then decided to create a graphic interface and publish it as a plugin in the hope that someone else finds it useful.\nWalking time is a QGIS python plugin that uses Tobbler\u0026rsquo;s hiking function to estimate the travel time along a line depending on the slope.\nThe input data required are a vector layer with lines and a raster layer with elevation values ​​(1). One can adjust the base velocity (on flat terrain) according to the type of walking or walker. By default, the value used is 5 km h (2). The plugin update or create fields with estimated time in minutes in forward and in reverse direction (3). One can run the plugin for all elements of the vector layer, or only on selected routes (4).\nThe plugin can also been used to prepare a network (graph) to perform network analysis when the use of travel walking time as cost is intended.\n\nQGIS repository: http://plugins.qgis.org/plugins/walkingtime/\nCode: https://github.com/SrNetoChan/WalkingTime\nBug report:https://github.com/SrNetoChan/WalkingTime/issues\n","date":"March 25, 2014","hero":"/images/default-hero.jpg","permalink":"https://srnetochan.github.io/posts/news/2014-03-25-novo-plugin-qgis-new-qgis-plugin-walking-time/","summary":"I have finally \u0026ldquo;finished\u0026rdquo; my new plugin. I uses some quotation marks, since I believe that there is still space for a few improvement. This plugin arised with the need to calculate the travel time for the Cascais oficial pedestrian routes, and started as a simple python script. I have then decided to create a graphic interface and publish it as a plugin in the hope that someone else finds it useful.","tags":null,"title":"New QGIS plugin - \"Walking time\""},{"categories":null,"contents":"The Walking time is a QGIS python plugin that uses Tobbler’s hiking function to estimate the travel time along a line depending on the slope.\nThe input data required are a vector layer with lines and a raster layer with elevation values ​​(1). One can adjust the base velocity (on flat terrain) according to the type of walking or walker. By default, the value used is 5 km h (2). The plugin update or create fields with estimated time in minutes in forward and in reverse direction (3). One can run the plugin for all elements of the vector layer, or only on selected routes (4).\nThe plugin can also been used to prepare a network (graph) to perform network analysis when the use of travel walking time as cost is intended.\nCaptura de tela 2014-03-24 12.12.17-01\nQGIS repository: http://plugins.qgis.org/plugins/walkingtime/\nCode: https://github.com/SrNetoChan/WalkingTime\nBug report: https://github.com/SrNetoChan/WalkingTime/issues\nInstalation The plugin is available in the oficial QGIS plugins repository. Therefore, just go to Plugins \u0026gt; Manage and install plugins and search for “Walking Time”. Since the plugin is experimental, make sure you have the Show also experimental plugins option selected in the Settings tab.\n","date":"March 25, 2014","hero":"/images/posts_hero/walking_time.png","permalink":"https://srnetochan.github.io/posts/plugins/walking-time/","summary":"The Walking time is a QGIS python plugin that uses Tobbler’s hiking function to estimate the travel time along a line depending on the slope.\nThe input data required are a vector layer with lines and a raster layer with elevation values ​​(1). One can adjust the base velocity (on flat terrain) according to the type of walking or walker. By default, the value used is 5 km h (2). The plugin update or create fields with estimated time in minutes in forward and in reverse direction (3).","tags":null,"title":"Walking time"},{"categories":null,"contents":"Hoje, ao rever uma camada vectorial de distribuição de fauna com interesse para a conservação com a nossa bióloga de serviço, Sara Saraiva, tive necessidade de corrigir (em todas as linhas de determinado atributo) o nome \u0026ldquo;Aquila fasciatus\u0026rdquo;, substituindo-o por \u0026ldquo;Aquila fasciata\u0026rdquo;.\nDevido à opção tomada na organização dos dados, cada polígono continha uma listagem de espécies que nele ocorrem, e o nome a corrigir encontrava-se no meio da mesma. A correcção teria de ser feita sem alterar os restantes nomes.\n\nTratavam-se de cerca de 80 linhas, e na verdade o termo \u0026ldquo;Aquila fasciatus\u0026rdquo; parecia uma meia dúzia de vezes, podendo ser facilmente substituído manualmente. No entanto, a minha honra geek não me permitia efectuar tal processo repetitivo e interrogava-se: \u0026ldquo;E se fossem mais?\u0026rdquo;.\nTinha portanto de encontrar uma forma de o fazer automaticamente. Precisava de um género de \u0026ldquo;Localizar e substituir\u0026hellip;\u0026rdquo;, funcionalidade muito comum em programas de edição de texto e folhas de calculo, e sabia que o QGIS não me iria deixar ficar mal.\nDepois de alguma pesquisa, a solução foi encontrada na calculadora de campo, usando a função replace().\n\nA expressão é:\nreplace(\u0026quot;campo\u0026quot;,'string_antiga','string_nova')  E o resultado foi o esperado.\n\n","date":"May 29, 2013","hero":"/images/default-hero.jpg","permalink":"https://srnetochan.github.io/posts/tutorials/2013-05-29-substituir-strings-na-tabela-de-atributos-do-qgis/","summary":"Hoje, ao rever uma camada vectorial de distribuição de fauna com interesse para a conservação com a nossa bióloga de serviço, Sara Saraiva, tive necessidade de corrigir (em todas as linhas de determinado atributo) o nome \u0026ldquo;Aquila fasciatus\u0026rdquo;, substituindo-o por \u0026ldquo;Aquila fasciata\u0026rdquo;.\nDevido à opção tomada na organização dos dados, cada polígono continha uma listagem de espécies que nele ocorrem, e o nome a corrigir encontrava-se no meio da mesma. A correcção teria de ser feita sem alterar os restantes nomes.","tags":["QGIS"],"title":"Substituir strings na tabela de atributos do QGIS"},{"categories":null,"contents":"Felizmente parece que algumas coisas vão mudando no nosso país no que toca ao acesso a dados. A Base Geográfica de Referenciação da Informação (BGRI), que outrora foi paga (e bem paga), está agora disponível a todos até ao nível da subsecção estatística e com um total de 122 variáveis dos censos 2011 (organizados por população residente, população presente, famílias, alojamento e edifícios). A página para download, permite descarregar os dados totais para Portugal, ou por regiões e concelhos.\n\nO zip descarregado contém diversos ficheiros, nomeadamente um shapefile (shp, shx e dbf) com os poligonos das subsecções estatísticas e um ficheiro de texto (csv) contendo os valores das variáveis dos censos 2011 (assim como uma nota explicativa das mesmas).\nA página de ajuda refere que é possível abrir estes dados recorrendo a software open source, como o QGIS ou gvSIG, mas não exemplifica como fazê-lo. A tarefa, embora não seja difícil, obriga a uns quanto passos. Vamos ver quais são.\nPreparar o CSV\nPor alguma razão (provavelmente para, ao abrir como folha de cálculo, impor o tipo string), no ficheiros csv, todos os valores do campo GEO_COD contêm um apóstrofo (') no início, que impossibilitam a ligação aos dados geográficos, sendo necessário eliminá-los. Para este tipo de tarefas uso geralmente o editor de texto Geany, mas pode ser feito em qualquer editor de texto através da funcionalidade \u0026ldquo;substituir\u0026rdquo;, deixando o campo \u0026ldquo;substituir por\u0026rdquo; vazio. Felizmente só este campo contém apóstrofos, sendo portanto possível eliminá-los de uma só vez em todo o documento.\n\nPor defeito, o QGIS (através do OGR) lê todos os campos do csv como sendo do tipo texto (string). No entanto, se quisermos definir explicitamente o tipo de dados de cada campo, podemos usar uma técnica que aprendi com o Hugo Martins. Na mesma pasta, basta criar um ficheiro de texto com o mesmo nome que o csv, mas com a extensão .csvt, e numa só linha, separado por virgulas e dentro de aspas, especificamos cada um dos tipos de dados dos campos (Integer, Real, String, Date (YYYY-MM-DD), Time (HH:MM:SS+nn) e DateTime (YYYY-MM-DD HH:MM:SS+nn)).\nPara o caso dos ficheiros da BGRI2011, o ficheiro .csvt será qualquer coisa assim.\n[code language=\u0026ldquo;text\u0026rdquo;]\u0026ldquo;integer\u0026rdquo;,\u0026ldquo;string\u0026rdquo;,\u0026ldquo;string\u0026rdquo;,\u0026ldquo;integer\u0026rdquo;,\u0026ldquo;string\u0026rdquo;,\u0026ldquo;integer\u0026rdquo;,\u0026ldquo;integer\u0026rdquo;,\u0026ldquo;integer\u0026rdquo;,\u0026ldquo;integer\u0026rdquo;,\u0026ldquo;integer\u0026rdquo;,\u0026ldquo;integer\u0026rdquo;,\u0026ldquo;integer\u0026rdquo;,\u0026ldquo;integer\u0026rdquo;,\u0026ldquo;integer\u0026rdquo;,\u0026ldquo;integer\u0026rdquo;,\u0026ldquo;integer\u0026rdquo;,\u0026ldquo;integer\u0026rdquo;,\u0026ldquo;integer\u0026rdquo;,\u0026ldquo;integer\u0026rdquo;,\u0026ldquo;integer\u0026rdquo;,\u0026ldquo;integer\u0026rdquo;,\u0026ldquo;integer\u0026rdquo;,\u0026ldquo;integer\u0026rdquo;,\u0026ldquo;integer\u0026rdquo;,\u0026ldquo;integer\u0026rdquo;,\u0026ldquo;integer\u0026rdquo;,\u0026ldquo;integer\u0026rdquo;,\u0026ldquo;integer\u0026rdquo;,\u0026ldquo;integer\u0026rdquo;,\u0026ldquo;integer\u0026rdquo;,\u0026ldquo;integer\u0026rdquo;,\u0026ldquo;integer\u0026rdquo;,\u0026ldquo;integer\u0026rdquo;,\u0026ldquo;integer\u0026rdquo;,\u0026ldquo;integer\u0026rdquo;,\u0026ldquo;integer\u0026rdquo;,\u0026ldquo;integer\u0026rdquo;,\u0026ldquo;integer\u0026rdquo;,\u0026ldquo;integer\u0026rdquo;,\u0026ldquo;integer\u0026rdquo;,\u0026ldquo;integer\u0026rdquo;,\u0026ldquo;integer\u0026rdquo;,\u0026ldquo;integer\u0026rdquo;,\u0026ldquo;integer\u0026rdquo;,\u0026ldquo;integer\u0026rdquo;,\u0026ldquo;integer\u0026rdquo;,\u0026ldquo;integer\u0026rdquo;,\u0026ldquo;integer\u0026rdquo;,\u0026ldquo;integer\u0026rdquo;,\u0026ldquo;integer\u0026rdquo;,\u0026ldquo;integer\u0026rdquo;,\u0026ldquo;integer\u0026rdquo;,\u0026ldquo;integer\u0026rdquo;,\u0026ldquo;integer\u0026rdquo;,\u0026ldquo;integer\u0026rdquo;,\u0026ldquo;integer\u0026rdquo;,\u0026ldquo;integer\u0026rdquo;,\u0026ldquo;integer\u0026rdquo;,\u0026ldquo;integer\u0026rdquo;,\u0026ldquo;integer\u0026rdquo;,\u0026ldquo;integer\u0026rdquo;,\u0026ldquo;integer\u0026rdquo;,\u0026ldquo;integer\u0026rdquo;,\u0026ldquo;integer\u0026rdquo;,\u0026ldquo;integer\u0026rdquo;,\u0026ldquo;integer\u0026rdquo;,\u0026ldquo;integer\u0026rdquo;,\u0026ldquo;integer\u0026rdquo;,\u0026ldquo;integer\u0026rdquo;,\u0026ldquo;integer\u0026rdquo;,\u0026ldquo;integer\u0026rdquo;,\u0026ldquo;integer\u0026rdquo;,\u0026ldquo;integer\u0026rdquo;,\u0026ldquo;integer\u0026rdquo;,\u0026ldquo;integer\u0026rdquo;,\u0026ldquo;integer\u0026rdquo;,\u0026ldquo;integer\u0026rdquo;,\u0026ldquo;integer\u0026rdquo;,\u0026ldquo;integer\u0026rdquo;,\u0026ldquo;integer\u0026rdquo;,\u0026ldquo;integer\u0026rdquo;,\u0026ldquo;integer\u0026rdquo;,\u0026ldquo;integer\u0026rdquo;,\u0026ldquo;integer\u0026rdquo;,\u0026ldquo;integer\u0026rdquo;,\u0026ldquo;integer\u0026rdquo;,\u0026ldquo;integer\u0026rdquo;,\u0026ldquo;integer\u0026rdquo;,\u0026ldquo;integer\u0026rdquo;,\u0026ldquo;integer\u0026rdquo;,\u0026ldquo;integer\u0026rdquo;,\u0026ldquo;integer\u0026rdquo;,\u0026ldquo;integer\u0026rdquo;,\u0026ldquo;integer\u0026rdquo;,\u0026ldquo;integer\u0026rdquo;,\u0026ldquo;integer\u0026rdquo;,\u0026ldquo;integer\u0026rdquo;,\u0026ldquo;integer\u0026rdquo;,\u0026ldquo;integer\u0026rdquo;,\u0026ldquo;integer\u0026rdquo;,\u0026ldquo;integer\u0026rdquo;,\u0026ldquo;integer\u0026rdquo;,\u0026ldquo;integer\u0026rdquo;,\u0026ldquo;integer\u0026rdquo;,\u0026ldquo;integer\u0026rdquo;,\u0026ldquo;integer\u0026rdquo;,\u0026ldquo;integer\u0026rdquo;,\u0026ldquo;integer\u0026rdquo;,\u0026ldquo;integer\u0026rdquo;,\u0026ldquo;integer\u0026rdquo;,\u0026ldquo;integer\u0026rdquo;,\u0026ldquo;integer\u0026rdquo;,\u0026ldquo;integer\u0026rdquo;,\u0026ldquo;integer\u0026rdquo;,\u0026ldquo;integer\u0026rdquo;,\u0026ldquo;integer\u0026rdquo;,\u0026ldquo;integer\u0026rdquo;,\u0026ldquo;integer\u0026rdquo;,\u0026ldquo;integer\u0026rdquo;,\u0026ldquo;integer\u0026rdquo;,\u0026ldquo;integer\u0026rdquo;,\u0026ldquo;integer\u0026rdquo;,\u0026ldquo;integer\u0026rdquo;,\u0026ldquo;integer\u0026rdquo;,\u0026ldquo;integer\u0026rdquo;,\u0026ldquo;integer\u0026rdquo;,\u0026ldquo;integer\u0026rdquo;[/code]\nAbrir os ficheiros no QGIS\nA abertura dos ficheiros no QGIS pode ser feita usando o botão \u0026ldquo;Adicionar nova camada vectorial\u0026rdquo;. Para evitar problemas com acentos e cedilhas devemos escolher a codificação \u0026ldquo;latin1\u0026rdquo;. Através do botão exibir, chegamos a outro menu onde podemos indicar a localização dos ficheiros. Depois de escolher como tipo de ficheiro \u0026ldquo;Todos os ficheiros\u0026rdquo;, podemos seleccionar o \u0026lsquo;shp\u0026rsquo; e o \u0026lsquo;csv\u0026rsquo; ao mesmo tempo (pressionando o Ctrl) e terminando por clicar em \u0026ldquo;Abrir\u0026rdquo; nos dois menus.\nDepois de abertos os ficheiros, há que definir o sistema de coordenadas de referência correcto para a camada dos dados geográficos, que, tal como podemos ver pelos metadados, para portugal continental é o ETRS89/PT-TM06 (EPSG:3763). Isso é feito clicando com botão direito sobre a camada e escolhendo \u0026ldquo;Set Layer CRS\u0026rdquo;. A forma mais fácil de encontrar o sistema desejado é introduzir o seu código EPSG no campo do filtro.\n\nUnir as tabelas de atributos Já só falta relacionar as duas camadas. Para isso devemos ir às propriedades da camada dos polígonos (botão direito do rato sobre a camada), e no separador união(joins), adicionar uma nova união. No menu seguinte há que definir como camada a unir a tabela resultante do csv, o campo a unir como \u0026ldquo;geo_cod\u0026rdquo; e o campo alvo como \u0026ldquo;bgri11\u0026rdquo; (contém o código da subsecção estatística).\n\nSe abrirmos a tabela de atributos da camada de polígonos, podemos verificar que contém todas as variáveis dos censos 2011, que podemos usar para produzir mapas temáticos.\n\nNota: \u0026ldquo;bgri11\u0026rdquo; é o campo que detém o código da subsecção estatistica, mas poderia usar-se outro nível de informação desde que combinasse os campos e se dissolvesse os polígonos de antemão.\n","date":"May 7, 2013","hero":"/images/default-hero.jpg","permalink":"https://srnetochan.github.io/posts/tutorials/2013-05-07-visualizar-dados-dos-censos-2011-com-o-qgis/","summary":"Felizmente parece que algumas coisas vão mudando no nosso país no que toca ao acesso a dados. A Base Geográfica de Referenciação da Informação (BGRI), que outrora foi paga (e bem paga), está agora disponível a todos até ao nível da subsecção estatística e com um total de 122 variáveis dos censos 2011 (organizados por população residente, população presente, famílias, alojamento e edifícios). A página para download, permite descarregar os dados totais para Portugal, ou por regiões e concelhos.","tags":null,"title":"Visualizar dados dos Censos 2011 com o QGIS"},{"categories":null,"contents":"Como está muito bem descrito neste artigo do Duarte Carreira, a criação de catálogos virtuais (vrt) e respectivas pirâmides (overviews) usando o GDAL, permite facilitar e melhorar a performance de visualização de mosaicos de imagens.\nUsando o comando gdalbuildvrt para criar o catálogo virtual, as áreas sem valor (NoData) são, por defeito, substituídas pelo valor 0. Em certos caso, o efeito pode não ser o mais desejável.\ngdalbuildvrt mosaico1.vrt --optfile listadeimagens.txt  \nNo entanto, através dos parâmetros -hidenodata e -srcnonata, é possível definir outros valores para os pixeis sem valor. Por exemplo, no comando seguinte escolhi os valores RGB [255, 255, 255] (branco). E o resultado foi uma imagem com o \u0026ldquo;fundo\u0026rdquo; branco.\ngdalbuildvrt mosaico2.vrt -hidenodata -srcnodata \u0026quot;255 255 255\u0026quot; --optfile listadeimagens.txt  \nSe pretendermos que pixeis sem valor não sejam representados, podemos usar o parâmetro -addalpha, tornando-os transparentes.\ngdalbuildvrt mosaico3.vrt -hidenodata -addalpha --optfile listadeimagens.txt  \n","date":"April 24, 2013","hero":"/images/default-hero.jpg","permalink":"https://srnetochan.github.io/posts/tutorials/2013-04-24-definir-representacao-de-pixeis-sem-valor-em-mosaicos-de-imagem-vrt/","summary":"Como está muito bem descrito neste artigo do Duarte Carreira, a criação de catálogos virtuais (vrt) e respectivas pirâmides (overviews) usando o GDAL, permite facilitar e melhorar a performance de visualização de mosaicos de imagens.\nUsando o comando gdalbuildvrt para criar o catálogo virtual, as áreas sem valor (NoData) são, por defeito, substituídas pelo valor 0. Em certos caso, o efeito pode não ser o mais desejável.\ngdalbuildvrt mosaico1.vrt --optfile listadeimagens.","tags":["gdal","tutorial"],"title":"Definir a representação de pixeis sem valor em mosaicos de imagens VRT"},{"categories":null,"contents":"During my professional and personal life, I have worked with much different software, with all kinds of licenses. Most of them would be proprietary, closed and / or commercial code. So why devote my time and learning \u0026ldquo;exclusively\u0026rdquo; to Open Source?\nWithout going into detail about the differences between open source software and free software, there are several reasons why FOSS (Free and Open Source Software) interest me.\nThe first is obviously freedom. Be free to use the software in any context and for any purpose, without being limited by the costs of software acquisition and / or the rules and conditions imposed by the manufacturer (as many said free (as beer) software do). That allows me to, for example, familiarize myself with its features without having to use piracy, or, as a freelancer worker, develop my work based on my technical capacities rather than my financial ones.\nSecond, the community and collaborative factor. The fact that open source software is built by user and for users, where the main goal is to enhance the software functionality (and not just raise the number of sales), and wherein each enhancement introduced by an individual or company is subsequently shared for the benefit of the whole community, avoiding duplication and \u0026ldquo;reinventing the wheel\u0026rdquo;. This is done in part through a lot of volunteer work and constant sharing of knowledge, either by the programmers or users. Thus, together, we all evolve at the same time as the software itself. In addition, everyone can contribute in some way, by producing code, writing and preparing supporting documentation, translating them into other languages or just by reporting bugs.\nFinally, the \u0026ldquo;costs\u0026rdquo;. The adoption of open source software in enterprises (including the public ones), allow them to focus their investments in training of the human resources and the possible (and desirable) sponsoring of new features that are essential for their workflow, usually for a small portion of the values to spend on the acquisition of commercial software (that usually \u0026ldquo;forces\u0026rdquo; the purchase of features that may never be used).\n","date":"March 31, 2013","hero":"/images/default-hero.jpg","permalink":"https://srnetochan.github.io/posts/opinion/2013-03-31-porque-o-open-source/","summary":"During my professional and personal life, I have worked with much different software, with all kinds of licenses. Most of them would be proprietary, closed and / or commercial code. So why devote my time and learning \u0026ldquo;exclusively\u0026rdquo; to Open Source?\nWithout going into detail about the differences between open source software and free software, there are several reasons why FOSS (Free and Open Source Software) interest me.\nThe first is obviously freedom.","tags":null,"title":"Open Source, why?"},{"categories":null,"contents":"The blog \u0026ldquo;GIS Unchained\u0026rdquo; have borne devoid of any grandiose aspirations. The main objective will be to register my experiences with Open Source software while addressing challenges related to geographic information systems (GIS), spatial analysis, cartography and everything else that it might entail.\nFollowing the same principle of openness and sharing of the open source, I hope that these records can help others who, like me, \u0026ldquo;venture\u0026rdquo; into this world.\nNo one should expect a very organized structure of articles and tutorials, as I think that the posts will be composed of loose ideas and problem solving as the challenges arise.\nFinally, I do not consider myself holder of all knowledge. Therefore, there may be better solutions for the problems I present. In that case, I will thank who can elucidate me. After all, I am also here to learn.\n","date":"March 26, 2013","hero":"/images/default-hero.jpg","permalink":"https://srnetochan.github.io/posts/opinion/2013-03-26-nota-de-abertura/","summary":"The blog \u0026ldquo;GIS Unchained\u0026rdquo; have borne devoid of any grandiose aspirations. The main objective will be to register my experiences with Open Source software while addressing challenges related to geographic information systems (GIS), spatial analysis, cartography and everything else that it might entail.\nFollowing the same principle of openness and sharing of the open source, I hope that these records can help others who, like me, \u0026ldquo;venture\u0026rdquo; into this world.","tags":null,"title":"Welcome note"},{"categories":null,"contents":"","date":"June 8, 2010","hero":"/images/default-hero.jpg","permalink":"https://srnetochan.github.io/notes/","summary":"","tags":null,"title":"নোট সমূহ"},{"categories":null,"contents":"Go Notes ","date":"January 1, 0001","hero":"/images/default-hero.jpg","permalink":"https://srnetochan.github.io/notes/go/","summary":"Go Notes ","tags":null,"title":"Go এর নোট সমূহ"},{"categories":null,"contents":"This file exists solely to respond to /search URL with the related search layout template.\nNo content shown here is rendered, all content is based in the template layouts/page/search.html\nSetting a very low sitemap priority will tell search engines this is not important content.\nThis implementation uses Fusejs, jquery and mark.js\nInitial setup Search depends on additional output content type of JSON in config.toml ``` [outputs] home = [\u0026ldquo;HTML\u0026rdquo;, \u0026ldquo;JSON\u0026rdquo;] ```\nSearching additional fileds To search additional fields defined in front matter, you must add it in 2 places.\nEdit layouts/_default/index.JSON This exposes the values in /index.json i.e. add category ``` \u0026hellip; \u0026ldquo;contents\u0026rdquo;:{{ .Content | plainify | jsonify }} {{ if .Params.tags }}, \u0026ldquo;tags\u0026rdquo;:{{ .Params.tags | jsonify }}{{end}}, \u0026ldquo;categories\u0026rdquo; : {{ .Params.categories | jsonify }}, \u0026hellip; ```\nEdit fuse.js options to Search static/js/search.js ``` keys: [ \u0026ldquo;title\u0026rdquo;, \u0026ldquo;contents\u0026rdquo;, \u0026ldquo;tags\u0026rdquo;, \u0026ldquo;categories\u0026rdquo; ] ```\n","date":"January 1, 0001","hero":"/images/default-hero.jpg","permalink":"https://srnetochan.github.io/search/","summary":"This file exists solely to respond to /search URL with the related search layout template.\nNo content shown here is rendered, all content is based in the template layouts/page/search.html\nSetting a very low sitemap priority will tell search engines this is not important content.\nThis implementation uses Fusejs, jquery and mark.js\nInitial setup Search depends on additional output content type of JSON in config.toml ``` [outputs] home = [\u0026ldquo;HTML\u0026rdquo;, \u0026ldquo;JSON\u0026rdquo;] ```","tags":null,"title":"Search Results"},{"categories":null,"contents":"Bash Notes ","date":"January 1, 0001","hero":"/images/default-hero.jpg","permalink":"https://srnetochan.github.io/notes/bash/","summary":"Bash Notes ","tags":null,"title":"ব্যাশের নোট সমূহ"}]