<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Postgis on Alexandre Neto</title><link>http://srnetochan.github.io/tags/postgis/</link><description>Recent content in Postgis on Alexandre Neto</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><lastBuildDate>Fri, 06 Nov 2015 00:49:01 +0000</lastBuildDate><atom:link href="http://srnetochan.github.io/tags/postgis/index.xml" rel="self" type="application/rss+xml"/><item><title>Getting multipolygon vertexes using PostGIS</title><link>http://srnetochan.github.io/posts/tutorials/2015-11-06-getting-multipolygon-vertexes-using-postgis/</link><pubDate>Fri, 06 Nov 2015 00:49:01 +0000</pubDate><guid>http://srnetochan.github.io/posts/tutorials/2015-11-06-getting-multipolygon-vertexes-using-postgis/</guid><description>EN | PT
Today I needed to create a view in PostGIS that returned the vertexes of a multi-polygon layer. Besides, I needed that they were numerically ordered starting in 1, and with the respective XY coordinates.
It seemed to be a trivial task – all I would need was to use the ST_DumpPoints() function to get all vertexes – if it wasn&amp;rsquo;t for the fact that PostGIS polygons have a duplicate vertex (the last vertex must be equal to the first one) that I have no interess in showing.</description></item><item><title>Labels leading lines with QGIS and Postgis</title><link>http://srnetochan.github.io/posts/tutorials/2015-01-12-etiquetas-com-guias-em-qgis-e-postgis-labels-leading-lines-with-qgis-and-postgis/</link><pubDate>Mon, 12 Jan 2015 08:00:41 +0000</pubDate><guid>http://srnetochan.github.io/posts/tutorials/2015-01-12-etiquetas-com-guias-em-qgis-e-postgis-labels-leading-lines-with-qgis-and-postgis/</guid><description>EN | PT
Recently I had the need to add labels to features with very close geometries, resulting in their collision.
Using data-defined override for label&amp;rsquo;s position (I have usedlayer to labeled layer plugin to set this really fast) and the QGIS tool to move labels, it was quite easy to relocate them to better places. However, in same cases, it was difficult to understand to which geometry they belonged.</description></item><item><title>Dissolver polígonos em PostgresPostgis</title><link>http://srnetochan.github.io/posts/tutorials/2013-12-20-dissolver-poligonos-em-postgrespostgis/</link><pubDate>Fri, 20 Dec 2013 15:35:42 +0000</pubDate><guid>http://srnetochan.github.io/posts/tutorials/2013-12-20-dissolver-poligonos-em-postgrespostgis/</guid><description>Trata-se de um cenário muito recorrente em análise espacial. Tendo uma camadatabela composta por diversos polígonos, queremos &amp;ldquo;juntá-los&amp;rdquo; de acordo com valores distintos de um ou mais atributos (exemplo: de uma camada com os limites de freguesias, queremos obter os concelhos, ou, da COS ao 3º nível, obter o 2º ou o 1º)
Este artigo tem como objectivo mostrar como fazê-lo em PostgresPostgis.
Tabela de exemplo Como exemplo vou usar uma tabela como o seguinte formato:</description></item><item><title>Triggers para que vos quero...</title><link>http://srnetochan.github.io/posts/tutorials/2013-12-03-triggers-para-que-vos-quero/</link><pubDate>Tue, 03 Dec 2013 23:09:47 +0000</pubDate><guid>http://srnetochan.github.io/posts/tutorials/2013-12-03-triggers-para-que-vos-quero/</guid><description>Há já algum tempo que queria estudar a funcionalidade de triggers em PostgreSQL. A grosso modo, tinha ideia que permitiam executar comandos de forma automática, sempre que se alterasse determinada tabela, mas desconhecia os mecanismos para o fazer. Uma das aplicações que me veio à ideia foi a de usar triggers para manter actualizado atributos geométricos como a área ou o comprimento. Quando editamos de elementos que contêm atributos relacionados com as dimensões, forma ou localização das suas geometrias (área, perímetro, comprimento), é muito fácil esquecermo-nos de os actualizar depois da edição.</description></item></channel></rss>