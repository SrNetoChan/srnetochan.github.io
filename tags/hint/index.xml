<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Hint on Alexandre Neto</title><link>https://srnetochan.github.io/tags/hint/</link><description>Recent content in Hint on Alexandre Neto</description><generator>Hugo -- gohugo.io</generator><language>en</language><lastBuildDate>Mon, 23 Feb 2015 23:44:33 +0000</lastBuildDate><atom:link href="https://srnetochan.github.io/tags/hint/index.xml" rel="self" type="application/rss+xml"/><item><title>Hack to adjust map symbols location in QGIS</title><link>https://srnetochan.github.io/posts/tutorials/2015-02-23-dica-para-ajustar-posicao-de-simbolos-em-qgis-hack-to-adjust-map-symbols-location-in-qgis/</link><pubDate>Mon, 23 Feb 2015 23:44:33 +0000</pubDate><guid>https://srnetochan.github.io/posts/tutorials/2015-02-23-dica-para-ajustar-posicao-de-simbolos-em-qgis-hack-to-adjust-map-symbols-location-in-qgis/</guid><description>Now and then I get too many map symbols (points) in the same place, and I thought how nice it would be if we could drag n&amp;rsquo; drop them around without messing with their geometries position, just like we do with labels. That thought gave me an idea for a cool hack.
Choose your point layer and start by creating two new fields called symbX and symbY (Type: Decimal number; Size: 20; Precision: 5).</description></item><item><title>Calculate polygon centroid's coordinates</title><link>https://srnetochan.github.io/posts/tutorials/2015-02-10-calcular-coordenadas-do-centroide-de-poligonos-calculate-polygon-centroids-coordinates/</link><pubDate>Tue, 10 Feb 2015 23:34:49 +0000</pubDate><guid>https://srnetochan.github.io/posts/tutorials/2015-02-10-calcular-coordenadas-do-centroide-de-poligonos-calculate-polygon-centroids-coordinates/</guid><description>I had the need to add columns with the coordinates of polygons centroids. I came up with the following expressions to calculate X e Y, respectively:
[code] xmin(centroid($geometry)) ymin(centroid($geometry)) [/code]
The expression seems quite simple, but it toke me some time before I realize that, not having a x(geometry) and y(geometry) functions, I could use the xmin() and ymin() to get the coordinates of the polygons centroids. Since this wasn&amp;rsquo;t the first time I had to use this expressions, this post will work as a reminder for the future.</description></item><item><title>Labels leading lines with QGIS and Postgis</title><link>https://srnetochan.github.io/posts/tutorials/2015-01-12-etiquetas-com-guias-em-qgis-e-postgis-labels-leading-lines-with-qgis-and-postgis/</link><pubDate>Mon, 12 Jan 2015 08:00:41 +0000</pubDate><guid>https://srnetochan.github.io/posts/tutorials/2015-01-12-etiquetas-com-guias-em-qgis-e-postgis-labels-leading-lines-with-qgis-and-postgis/</guid><description>Recently I had the need to add labels to features with very close geometries, resulting in their collision.
Using data-defined override for label&amp;rsquo;s position (I have used layer to labeled layer plugin to set this really fast) and the QGIS tool to move labels, it was quite easy to relocate them to better places. However, in same cases, it was difficult to understand to which geometry they belonged.
I needed some kind of leading lines to connect, whenever necessary, label and feature.</description></item></channel></rss>